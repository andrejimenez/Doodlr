Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
Rule 2     startQuad -> <empty>
Rule 3     fillMainQuad -> <empty>
Rule 4     endPrograma -> <empty>
Rule 5     cambiaScope -> <empty>
Rule 6     varGlobales -> PR_global defVariables varGlobales
Rule 7     varGlobales -> empty
Rule 8     declaraFunciones -> PR_function defFuncion declaraFunciones
Rule 9     declaraFunciones -> empty
Rule 10    defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad
Rule 11    agregaFuncion -> <empty>
Rule 12    endProcCuad -> <empty>
Rule 13    decParametros -> decTipo ID meteVariable
Rule 14    decParametros -> decTipo ID meteVariable TO_COMA decParametros
Rule 15    mainBloque -> cambiaScope funcCiclos mainBloque
Rule 16    mainBloque -> funcIf mainBloque
Rule 17    mainBloque -> defVariables mainBloque
Rule 18    mainBloque -> llamadaDeFunciones mainBloque
Rule 19    mainBloque -> funcIgual mainBloque
Rule 20    mainBloque -> funcWrite mainBloque
Rule 21    mainBloque -> funcRead mainBloque
Rule 22    mainBloque -> empty
Rule 23    setMainFuncionValores -> <empty>
Rule 24    funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
Rule 25    funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
Rule 26    funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
Rule 27    funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
Rule 28    funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
Rule 29    funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO
Rule 30    funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
Rule 31    funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO
Rule 32    funcElse -> empty
Rule 33    decTipo -> PR_int
Rule 34    decTipo -> PR_float
Rule 35    decTipo -> PR_bool
Rule 36    decTipo -> PR_void
Rule 37    defVariables -> PR_int tipoVar defVar1 TO_PuntoComa
Rule 38    defVariables -> PR_float tipoVar defVar1 TO_PuntoComa
Rule 39    defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa
Rule 40    defVariables -> PR_void tipoVar defVar1 TO_PuntoComa
Rule 41    defVar1 -> variable defVar2
Rule 42    defVar1 -> arreglo defVar2
Rule 43    defVar2 -> TO_COMA defVar1
Rule 44    defVar2 -> empty
Rule 45    variable -> ID meteVariable
Rule 46    tipoVar -> empty
Rule 47    meteVariable -> empty
Rule 48    arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr
Rule 49    escribeArr -> empty
Rule 50    defExpresiones -> decExpresion
Rule 51    defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
Rule 52    defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
Rule 53    decExpresion -> miniExp
Rule 54    decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
Rule 55    decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
Rule 56    decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
Rule 57    decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
Rule 58    decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
Rule 59    decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
Rule 60    miniExp -> microExp
Rule 61    miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
Rule 62    miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
Rule 63    microExp -> micromicroExp
Rule 64    microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
Rule 65    microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
Rule 66    microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
Rule 67    micromicroExp -> decSolucion
Rule 68    micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
Rule 69    decSolucion -> ID pushPilaVar
Rule 70    decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
Rule 71    decSolucion -> TO_INT agregaIntCuad
Rule 72    decSolucion -> TO_FLOAT agregaFloatCuad
Rule 73    decSolucion -> PR_true agregaBoolCuad
Rule 74    decSolucion -> PR_false agregaBoolCuad
Rule 75    decSolucion -> llamadaDeFunciones
Rule 76    decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
Rule 77    llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
Rule 78    llamadaDeFunciones -> funcionesDibuja
Rule 79    llamadaDeFunciones -> empty
Rule 80    funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
Rule 81    funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
Rule 82    funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
Rule 83    funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
Rule 84    decParamFuncs -> ID paramCuadruplo
Rule 85    decParamFuncs -> ID paramCuadruplo TO_COMA decParamFuncs
Rule 86    decParamFuncs -> empty
Rule 87    pushPilaOp -> empty
Rule 88    pushPilaVar -> empty
Rule 89    agregaIntCuad -> empty
Rule 90    agregaFloatCuad -> empty
Rule 91    agregaBoolCuad -> empty
Rule 92    cuadArrPush -> empty
Rule 93    agregaAndCuad -> <empty>
Rule 94    agregaComparCuad -> <empty>
Rule 95    agregaSumResCuad -> <empty>
Rule 96    agregaMultDivCuad -> <empty>
Rule 97    agregaPowCuad -> <empty>
Rule 98    agregaIgualCuad -> <empty>
Rule 99    cuadruploAsignaArr -> empty
Rule 100   agregaWriteCuad -> <empty>
Rule 101   agregaReadCuad -> <empty>
Rule 102   agregaReturnCuad -> <empty>
Rule 103   agregaIfCuadP1 -> <empty>
Rule 104   agregaIfCuadP2 -> <empty>
Rule 105   agregaIfCuadP3 -> <empty>
Rule 106   WhileQuad1 -> <empty>
Rule 107   WhileQuad2 -> <empty>
Rule 108   WhileQuad3 -> <empty>
Rule 109   paramCuadruplo -> <empty>
Rule 110   eraCuadruplo -> <empty>
Rule 111   goSubCuadruplo -> <empty>
Rule 112   circuloCuad -> <empty>
Rule 113   rectanguloCuad -> <empty>
Rule 114   espiralCuad -> <empty>
Rule 115   estrellaCuad -> <empty>
Rule 116   empty -> <empty>

Terminals, with rules where they appear

ID                   : 10 13 14 24 25 26 27 28 45 48 69 70 77 80 80 80 81 81 81 82 82 82 83 83 83 84 85
OP_ADD               : 62
OP_DIFF              : 55
OP_DIV               : 65
OP_EQUALS            : 27 28
OP_EQUALTO           : 54
OP_GREATT            : 58
OP_GREATTEQ          : 59
OP_LESST             : 56
OP_LESSTEQ           : 57
OP_MOD               : 66
OP_MULT              : 64
OP_POW               : 68
OP_SUBS              : 61
PR_While             : 29
PR_and               : 51
PR_bool              : 35 39
PR_circulo           : 80
PR_else              : 31
PR_espiral           : 82
PR_estrella          : 83
PR_false             : 74
PR_float             : 34 38
PR_function          : 8
PR_global            : 6
PR_if                : 30
PR_int               : 33 37
PR_main              : 1
PR_or                : 52
PR_read              : 25
PR_rectangulo        : 81
PR_return            : 26
PR_true              : 73
PR_void              : 36 40
PR_write             : 24
TO_BRACKCLO          : 1 10 29 30 31
TO_BRACKOP           : 1 10 29 30 31
TO_CBRACKCLO         : 28 48 70
TO_CBRACKOP          : 28 48 70
TO_COMA              : 14 43 80 80 81 81 82 82 83 83 85
TO_FLOAT             : 72
TO_INT               : 48 71
TO_PARCLO            : 10 24 25 26 29 30 76 77 80 81 82 83
TO_PAROP             : 10 24 25 26 29 30 76 77 80 81 82 83
TO_PuntoComa         : 24 25 26 27 28 37 38 39 40 77 80 81 82 83
error                : 

Nonterminals, with rules where they appear

WhileQuad1           : 
WhileQuad2           : 
WhileQuad3           : 
agregaAndCuad        : 51 52
agregaBoolCuad       : 73 74
agregaComparCuad     : 54 55 56 57 58 59
agregaFloatCuad      : 72
agregaFuncion        : 10
agregaIfCuadP1       : 29 30
agregaIfCuadP2       : 29 31
agregaIfCuadP3       : 30
agregaIgualCuad      : 27 28
agregaIntCuad        : 71
agregaMultDivCuad    : 64 65 66
agregaPowCuad        : 68
agregaReadCuad       : 25
agregaReturnCuad     : 26
agregaSumResCuad     : 61 62
agregaWriteCuad      : 24
arreglo              : 42
cambiaScope          : 1 15
circuloCuad          : 80
cuadArrPush          : 70
cuadruploAsignaArr   : 28
decExpresion         : 50 51 52
decParamFuncs        : 77 85
decParametros        : 10 14
decSolucion          : 67 68
decTipo              : 10 13 14
declaraFunciones     : 1 8
defExpresiones       : 27 28 28 29 30 51 52 70 76
defFuncion           : 8
defVar1              : 37 38 39 40 43
defVar2              : 41 42
defVariables         : 6 17
empty                : 7 9 22 32 44 46 47 49 79 86 87 88 89 90 91 92 99
endProcCuad          : 10
endPrograma          : 1
eraCuadruplo         : 77
escribeArr           : 48
espiralCuad          : 82
estrellaCuad         : 83
fillMainQuad         : 1
funcCiclos           : 15
funcElse             : 30
funcIf               : 16
funcIgual            : 19
funcRead             : 21
funcReturn           : 10
funcWrite            : 20
funcionesDibuja      : 78
goSubCuadruplo       : 77
llamadaDeFunciones   : 18 75
mainBloque           : 1 10 15 16 17 18 19 20 21 29 30 31
meteVariable         : 13 14 45
microExp             : 60 61 62 64 65 66
micromicroExp        : 63 64 65 66 68
miniExp              : 53 54 54 55 55 56 56 57 57 58 58 59 59 61 62
paramCuadruplo       : 84 85
programa             : 0
pushPilaOp           : 27 51 52 54 55 56 57 58 59 61 62 64 65 66 68 76 76
pushPilaVar          : 27 69
rectanguloCuad       : 81
setMainFuncionValores : 1
startQuad            : 1
tipoVar              : 37 38 39 40
varGlobales          : 1 6
variable             : 41

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (2) startQuad -> .

    PR_global       reduce using rule 2 (startQuad -> .)
    PR_function     reduce using rule 2 (startQuad -> .)
    PR_main         reduce using rule 2 (startQuad -> .)

    programa                       shift and go to state 1
    startQuad                      shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> startQuad . varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (6) varGlobales -> . PR_global defVariables varGlobales
    (7) varGlobales -> . empty
    (116) empty -> .

    PR_global       shift and go to state 4
    PR_function     reduce using rule 116 (empty -> .)
    PR_main         reduce using rule 116 (empty -> .)

    varGlobales                    shift and go to state 3
    empty                          shift and go to state 5

state 3

    (1) programa -> startQuad varGlobales . cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (5) cambiaScope -> .

    PR_function     reduce using rule 5 (cambiaScope -> .)
    PR_main         reduce using rule 5 (cambiaScope -> .)

    cambiaScope                    shift and go to state 6

state 4

    (6) varGlobales -> PR_global . defVariables varGlobales
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa

    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11

    defVariables                   shift and go to state 7

state 5

    (7) varGlobales -> empty .

    PR_function     reduce using rule 7 (varGlobales -> empty .)
    PR_main         reduce using rule 7 (varGlobales -> empty .)


state 6

    (1) programa -> startQuad varGlobales cambiaScope . declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (8) declaraFunciones -> . PR_function defFuncion declaraFunciones
    (9) declaraFunciones -> . empty
    (116) empty -> .

    PR_function     shift and go to state 13
    PR_main         reduce using rule 116 (empty -> .)

    declaraFunciones               shift and go to state 12
    empty                          shift and go to state 14

state 7

    (6) varGlobales -> PR_global defVariables . varGlobales
    (6) varGlobales -> . PR_global defVariables varGlobales
    (7) varGlobales -> . empty
    (116) empty -> .

    PR_global       shift and go to state 4
    PR_function     reduce using rule 116 (empty -> .)
    PR_main         reduce using rule 116 (empty -> .)

    varGlobales                    shift and go to state 15
    empty                          shift and go to state 5

state 8

    (37) defVariables -> PR_int . tipoVar defVar1 TO_PuntoComa
    (46) tipoVar -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)

    tipoVar                        shift and go to state 16
    empty                          shift and go to state 17

state 9

    (38) defVariables -> PR_float . tipoVar defVar1 TO_PuntoComa
    (46) tipoVar -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)

    tipoVar                        shift and go to state 18
    empty                          shift and go to state 17

state 10

    (39) defVariables -> PR_bool . tipoVar defVar1 TO_PuntoComa
    (46) tipoVar -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)

    tipoVar                        shift and go to state 19
    empty                          shift and go to state 17

state 11

    (40) defVariables -> PR_void . tipoVar defVar1 TO_PuntoComa
    (46) tipoVar -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)

    tipoVar                        shift and go to state 20
    empty                          shift and go to state 17

state 12

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones . PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma

    PR_main         shift and go to state 21


state 13

    (8) declaraFunciones -> PR_function . defFuncion declaraFunciones
    (10) defFuncion -> . decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad
    (33) decTipo -> . PR_int
    (34) decTipo -> . PR_float
    (35) decTipo -> . PR_bool
    (36) decTipo -> . PR_void

    PR_int          shift and go to state 24
    PR_float        shift and go to state 25
    PR_bool         shift and go to state 26
    PR_void         shift and go to state 27

    defFuncion                     shift and go to state 22
    decTipo                        shift and go to state 23

state 14

    (9) declaraFunciones -> empty .

    PR_main         reduce using rule 9 (declaraFunciones -> empty .)


state 15

    (6) varGlobales -> PR_global defVariables varGlobales .

    PR_function     reduce using rule 6 (varGlobales -> PR_global defVariables varGlobales .)
    PR_main         reduce using rule 6 (varGlobales -> PR_global defVariables varGlobales .)


state 16

    (37) defVariables -> PR_int tipoVar . defVar1 TO_PuntoComa
    (41) defVar1 -> . variable defVar2
    (42) defVar1 -> . arreglo defVar2
    (45) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 28
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 17

    (46) tipoVar -> empty .

    ID              reduce using rule 46 (tipoVar -> empty .)


state 18

    (38) defVariables -> PR_float tipoVar . defVar1 TO_PuntoComa
    (41) defVar1 -> . variable defVar2
    (42) defVar1 -> . arreglo defVar2
    (45) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 32
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 19

    (39) defVariables -> PR_bool tipoVar . defVar1 TO_PuntoComa
    (41) defVar1 -> . variable defVar2
    (42) defVar1 -> . arreglo defVar2
    (45) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 33
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 20

    (40) defVariables -> PR_void tipoVar . defVar1 TO_PuntoComa
    (41) defVar1 -> . variable defVar2
    (42) defVar1 -> . arreglo defVar2
    (45) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 34
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 21

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main . fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (3) fillMainQuad -> .

    TO_BRACKOP      reduce using rule 3 (fillMainQuad -> .)

    fillMainQuad                   shift and go to state 35

state 22

    (8) declaraFunciones -> PR_function defFuncion . declaraFunciones
    (8) declaraFunciones -> . PR_function defFuncion declaraFunciones
    (9) declaraFunciones -> . empty
    (116) empty -> .

    PR_function     shift and go to state 13
    PR_main         reduce using rule 116 (empty -> .)

    declaraFunciones               shift and go to state 36
    empty                          shift and go to state 14

state 23

    (10) defFuncion -> decTipo . ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad

    ID              shift and go to state 37


state 24

    (33) decTipo -> PR_int .

    ID              reduce using rule 33 (decTipo -> PR_int .)


state 25

    (34) decTipo -> PR_float .

    ID              reduce using rule 34 (decTipo -> PR_float .)


state 26

    (35) decTipo -> PR_bool .

    ID              reduce using rule 35 (decTipo -> PR_bool .)


state 27

    (36) decTipo -> PR_void .

    ID              reduce using rule 36 (decTipo -> PR_void .)


state 28

    (37) defVariables -> PR_int tipoVar defVar1 . TO_PuntoComa

    TO_PuntoComa    shift and go to state 38


state 29

    (41) defVar1 -> variable . defVar2
    (43) defVar2 -> . TO_COMA defVar1
    (44) defVar2 -> . empty
    (116) empty -> .

    TO_COMA         shift and go to state 40
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    defVar2                        shift and go to state 39
    empty                          shift and go to state 41

state 30

    (42) defVar1 -> arreglo . defVar2
    (43) defVar2 -> . TO_COMA defVar1
    (44) defVar2 -> . empty
    (116) empty -> .

    TO_COMA         shift and go to state 40
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    defVar2                        shift and go to state 42
    empty                          shift and go to state 41

state 31

    (45) variable -> ID . meteVariable
    (48) arreglo -> ID . TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr
    (47) meteVariable -> . empty
    (116) empty -> .

    TO_CBRACKOP     shift and go to state 44
    TO_COMA         reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    meteVariable                   shift and go to state 43
    empty                          shift and go to state 45

state 32

    (38) defVariables -> PR_float tipoVar defVar1 . TO_PuntoComa

    TO_PuntoComa    shift and go to state 46


state 33

    (39) defVariables -> PR_bool tipoVar defVar1 . TO_PuntoComa

    TO_PuntoComa    shift and go to state 47


state 34

    (40) defVariables -> PR_void tipoVar defVar1 . TO_PuntoComa

    TO_PuntoComa    shift and go to state 48


state 35

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad . TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma

    TO_BRACKOP      shift and go to state 49


state 36

    (8) declaraFunciones -> PR_function defFuncion declaraFunciones .

    PR_main         reduce using rule 8 (declaraFunciones -> PR_function defFuncion declaraFunciones .)


state 37

    (10) defFuncion -> decTipo ID . agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad
    (11) agregaFuncion -> .

    TO_PAROP        reduce using rule 11 (agregaFuncion -> .)

    agregaFuncion                  shift and go to state 50

state 38

    (37) defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .

    PR_global       reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_function     reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_main         reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_if           reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_int          reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_float        reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_bool         reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_void         reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    ID              reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_write        reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_read         reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_circulo      reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_rectangulo   reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_espiral      reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_estrella     reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_While        reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_return       reduce using rule 37 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)


state 39

    (41) defVar1 -> variable defVar2 .

    TO_PuntoComa    reduce using rule 41 (defVar1 -> variable defVar2 .)


state 40

    (43) defVar2 -> TO_COMA . defVar1
    (41) defVar1 -> . variable defVar2
    (42) defVar1 -> . arreglo defVar2
    (45) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 51
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 41

    (44) defVar2 -> empty .

    TO_PuntoComa    reduce using rule 44 (defVar2 -> empty .)


state 42

    (42) defVar1 -> arreglo defVar2 .

    TO_PuntoComa    reduce using rule 42 (defVar1 -> arreglo defVar2 .)


state 43

    (45) variable -> ID meteVariable .

    TO_COMA         reduce using rule 45 (variable -> ID meteVariable .)
    TO_PuntoComa    reduce using rule 45 (variable -> ID meteVariable .)


state 44

    (48) arreglo -> ID TO_CBRACKOP . TO_INT TO_CBRACKCLO escribeArr

    TO_INT          shift and go to state 52


state 45

    (47) meteVariable -> empty .

    TO_COMA         reduce using rule 47 (meteVariable -> empty .)
    TO_PuntoComa    reduce using rule 47 (meteVariable -> empty .)
    TO_PARCLO       reduce using rule 47 (meteVariable -> empty .)


state 46

    (38) defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .

    PR_global       reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_function     reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_main         reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_if           reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_int          reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_float        reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_bool         reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_void         reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    ID              reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_write        reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_read         reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_circulo      reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_rectangulo   reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_espiral      reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_estrella     reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_While        reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_return       reduce using rule 38 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)


state 47

    (39) defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .

    PR_global       reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_function     reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_main         reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_if           reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_int          reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_float        reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_bool         reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_void         reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    ID              reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_write        reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_read         reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_circulo      reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_rectangulo   reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_espiral      reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_estrella     reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_While        reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_return       reduce using rule 39 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)


state 48

    (40) defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .

    PR_global       reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_function     reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_main         reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_if           reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_int          reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_float        reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_bool         reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_void         reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    ID              reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_write        reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_read         reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_circulo      reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_rectangulo   reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_espiral      reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_estrella     reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_While        reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_return       reduce using rule 40 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)


state 49

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP . setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (23) setMainFuncionValores -> .

    PR_if           reduce using rule 23 (setMainFuncionValores -> .)
    PR_int          reduce using rule 23 (setMainFuncionValores -> .)
    PR_float        reduce using rule 23 (setMainFuncionValores -> .)
    PR_bool         reduce using rule 23 (setMainFuncionValores -> .)
    PR_void         reduce using rule 23 (setMainFuncionValores -> .)
    ID              reduce using rule 23 (setMainFuncionValores -> .)
    PR_write        reduce using rule 23 (setMainFuncionValores -> .)
    PR_read         reduce using rule 23 (setMainFuncionValores -> .)
    PR_circulo      reduce using rule 23 (setMainFuncionValores -> .)
    PR_rectangulo   reduce using rule 23 (setMainFuncionValores -> .)
    PR_espiral      reduce using rule 23 (setMainFuncionValores -> .)
    PR_estrella     reduce using rule 23 (setMainFuncionValores -> .)
    TO_BRACKCLO     reduce using rule 23 (setMainFuncionValores -> .)
    PR_While        reduce using rule 23 (setMainFuncionValores -> .)

    setMainFuncionValores          shift and go to state 53

state 50

    (10) defFuncion -> decTipo ID agregaFuncion . TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad

    TO_PAROP        shift and go to state 54


state 51

    (43) defVar2 -> TO_COMA defVar1 .

    TO_PuntoComa    reduce using rule 43 (defVar2 -> TO_COMA defVar1 .)


state 52

    (48) arreglo -> ID TO_CBRACKOP TO_INT . TO_CBRACKCLO escribeArr

    TO_CBRACKCLO    shift and go to state 55


state 53

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores . mainBloque TO_BRACKCLO endPrograma
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    cambiaScope                    shift and go to state 56
    mainBloque                     shift and go to state 57
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 54

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP . decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad
    (13) decParametros -> . decTipo ID meteVariable
    (14) decParametros -> . decTipo ID meteVariable TO_COMA decParametros
    (33) decTipo -> . PR_int
    (34) decTipo -> . PR_float
    (35) decTipo -> . PR_bool
    (36) decTipo -> . PR_void

    PR_int          shift and go to state 24
    PR_float        shift and go to state 25
    PR_bool         shift and go to state 26
    PR_void         shift and go to state 27

    decTipo                        shift and go to state 74
    decParametros                  shift and go to state 75

state 55

    (48) arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO . escribeArr
    (49) escribeArr -> . empty
    (116) empty -> .

    TO_COMA         reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    escribeArr                     shift and go to state 76
    empty                          shift and go to state 77

state 56

    (15) mainBloque -> cambiaScope . funcCiclos mainBloque
    (29) funcCiclos -> . PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO

    PR_While        shift and go to state 79

    funcCiclos                     shift and go to state 78

state 57

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque . TO_BRACKCLO endPrograma

    TO_BRACKCLO     shift and go to state 80


state 58

    (16) mainBloque -> funcIf . mainBloque
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_return       reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    funcIf                         shift and go to state 58
    mainBloque                     shift and go to state 81
    cambiaScope                    shift and go to state 56
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 59

    (17) mainBloque -> defVariables . mainBloque
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_return       reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    defVariables                   shift and go to state 59
    mainBloque                     shift and go to state 82
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 60

    (18) mainBloque -> llamadaDeFunciones . mainBloque
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_return       reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    llamadaDeFunciones             shift and go to state 60
    mainBloque                     shift and go to state 83
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 61

    (19) mainBloque -> funcIgual . mainBloque
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_return       reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    funcIgual                      shift and go to state 61
    mainBloque                     shift and go to state 84
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 62

    (20) mainBloque -> funcWrite . mainBloque
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_return       reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    funcWrite                      shift and go to state 62
    mainBloque                     shift and go to state 85
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 63

    (21) mainBloque -> funcRead . mainBloque
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_return       reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    funcRead                       shift and go to state 63
    mainBloque                     shift and go to state 86
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 64

    (22) mainBloque -> empty .
    (79) llamadaDeFunciones -> empty .

  ! reduce/reduce conflict for TO_BRACKCLO resolved using rule 22 (mainBloque -> empty .)
  ! reduce/reduce conflict for PR_return resolved using rule 22 (mainBloque -> empty .)
    TO_BRACKCLO     reduce using rule 22 (mainBloque -> empty .)
    PR_return       reduce using rule 22 (mainBloque -> empty .)
    PR_if           reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_int          reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_float        reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_bool         reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_void         reduce using rule 79 (llamadaDeFunciones -> empty .)
    ID              reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_write        reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_read         reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_circulo      reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_rectangulo   reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_espiral      reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_estrella     reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_While        reduce using rule 79 (llamadaDeFunciones -> empty .)

  ! TO_BRACKCLO     [ reduce using rule 79 (llamadaDeFunciones -> empty .) ]
  ! PR_return       [ reduce using rule 79 (llamadaDeFunciones -> empty .) ]


state 65

    (30) funcIf -> PR_if . TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3

    TO_PAROP        shift and go to state 87


state 66

    (77) llamadaDeFunciones -> ID . eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (27) funcIgual -> ID . pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> ID . TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (110) eraCuadruplo -> .
    (88) pushPilaVar -> . empty
    (116) empty -> .

    TO_CBRACKOP     shift and go to state 90
    TO_PAROP        reduce using rule 110 (eraCuadruplo -> .)
    OP_EQUALS       reduce using rule 116 (empty -> .)

    eraCuadruplo                   shift and go to state 88
    pushPilaVar                    shift and go to state 89
    empty                          shift and go to state 91

state 67

    (78) llamadaDeFunciones -> funcionesDibuja .

    PR_if           reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_int          reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_float        reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_bool         reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_void         reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    ID              reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_write        reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_read         reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_circulo      reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_rectangulo   reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_espiral      reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_estrella     reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_While        reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    TO_BRACKCLO     reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_return       reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_POW          reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_MULT         reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_DIV          reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_MOD          reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_SUBS         reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_ADD          reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_EQUALTO      reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_DIFF         reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_LESST        reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_LESSTEQ      reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_GREATT       reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    OP_GREATTEQ     reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_and          reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    PR_or           reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    TO_PARCLO       reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    TO_CBRACKCLO    reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)
    TO_PuntoComa    reduce using rule 78 (llamadaDeFunciones -> funcionesDibuja .)


state 68

    (24) funcWrite -> PR_write . TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa

    TO_PAROP        shift and go to state 92


state 69

    (25) funcRead -> PR_read . TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa

    TO_PAROP        shift and go to state 93


state 70

    (80) funcionesDibuja -> PR_circulo . TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    TO_PAROP        shift and go to state 94


state 71

    (81) funcionesDibuja -> PR_rectangulo . TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    TO_PAROP        shift and go to state 95


state 72

    (82) funcionesDibuja -> PR_espiral . TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    TO_PAROP        shift and go to state 96


state 73

    (83) funcionesDibuja -> PR_estrella . TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    TO_PAROP        shift and go to state 97


state 74

    (13) decParametros -> decTipo . ID meteVariable
    (14) decParametros -> decTipo . ID meteVariable TO_COMA decParametros

    ID              shift and go to state 98


state 75

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros . TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad

    TO_PARCLO       shift and go to state 99


state 76

    (48) arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr .

    TO_COMA         reduce using rule 48 (arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr .)
    TO_PuntoComa    reduce using rule 48 (arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr .)


state 77

    (49) escribeArr -> empty .

    TO_COMA         reduce using rule 49 (escribeArr -> empty .)
    TO_PuntoComa    reduce using rule 49 (escribeArr -> empty .)


state 78

    (15) mainBloque -> cambiaScope funcCiclos . mainBloque
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_return       reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    cambiaScope                    shift and go to state 56
    mainBloque                     shift and go to state 100
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 79

    (29) funcCiclos -> PR_While . TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO

    TO_PAROP        shift and go to state 101


state 80

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO . endPrograma
    (4) endPrograma -> .

    $end            reduce using rule 4 (endPrograma -> .)

    endPrograma                    shift and go to state 102

state 81

    (16) mainBloque -> funcIf mainBloque .

    TO_BRACKCLO     reduce using rule 16 (mainBloque -> funcIf mainBloque .)
    PR_return       reduce using rule 16 (mainBloque -> funcIf mainBloque .)


state 82

    (17) mainBloque -> defVariables mainBloque .

    TO_BRACKCLO     reduce using rule 17 (mainBloque -> defVariables mainBloque .)
    PR_return       reduce using rule 17 (mainBloque -> defVariables mainBloque .)


state 83

    (18) mainBloque -> llamadaDeFunciones mainBloque .

    TO_BRACKCLO     reduce using rule 18 (mainBloque -> llamadaDeFunciones mainBloque .)
    PR_return       reduce using rule 18 (mainBloque -> llamadaDeFunciones mainBloque .)


state 84

    (19) mainBloque -> funcIgual mainBloque .

    TO_BRACKCLO     reduce using rule 19 (mainBloque -> funcIgual mainBloque .)
    PR_return       reduce using rule 19 (mainBloque -> funcIgual mainBloque .)


state 85

    (20) mainBloque -> funcWrite mainBloque .

    TO_BRACKCLO     reduce using rule 20 (mainBloque -> funcWrite mainBloque .)
    PR_return       reduce using rule 20 (mainBloque -> funcWrite mainBloque .)


state 86

    (21) mainBloque -> funcRead mainBloque .

    TO_BRACKCLO     reduce using rule 21 (mainBloque -> funcRead mainBloque .)
    PR_return       reduce using rule 21 (mainBloque -> funcRead mainBloque .)


state 87

    (30) funcIf -> PR_if TO_PAROP . defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)

    defExpresiones                 shift and go to state 104
    decExpresion                   shift and go to state 105
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 88

    (77) llamadaDeFunciones -> ID eraCuadruplo . TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo

    TO_PAROP        shift and go to state 117


state 89

    (27) funcIgual -> ID pushPilaVar . OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad

    OP_EQUALS       shift and go to state 118


state 90

    (28) funcIgual -> ID TO_CBRACKOP . defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)

    defExpresiones                 shift and go to state 119
    decExpresion                   shift and go to state 105
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 91

    (88) pushPilaVar -> empty .

    OP_EQUALS       reduce using rule 88 (pushPilaVar -> empty .)
    OP_POW          reduce using rule 88 (pushPilaVar -> empty .)
    OP_MULT         reduce using rule 88 (pushPilaVar -> empty .)
    OP_DIV          reduce using rule 88 (pushPilaVar -> empty .)
    OP_MOD          reduce using rule 88 (pushPilaVar -> empty .)
    OP_SUBS         reduce using rule 88 (pushPilaVar -> empty .)
    OP_ADD          reduce using rule 88 (pushPilaVar -> empty .)
    OP_EQUALTO      reduce using rule 88 (pushPilaVar -> empty .)
    OP_DIFF         reduce using rule 88 (pushPilaVar -> empty .)
    OP_LESST        reduce using rule 88 (pushPilaVar -> empty .)
    OP_LESSTEQ      reduce using rule 88 (pushPilaVar -> empty .)
    OP_GREATT       reduce using rule 88 (pushPilaVar -> empty .)
    OP_GREATTEQ     reduce using rule 88 (pushPilaVar -> empty .)
    PR_and          reduce using rule 88 (pushPilaVar -> empty .)
    PR_or           reduce using rule 88 (pushPilaVar -> empty .)
    TO_PARCLO       reduce using rule 88 (pushPilaVar -> empty .)
    TO_CBRACKCLO    reduce using rule 88 (pushPilaVar -> empty .)
    TO_PuntoComa    reduce using rule 88 (pushPilaVar -> empty .)


state 92

    (24) funcWrite -> PR_write TO_PAROP . ID agregaWriteCuad TO_PARCLO TO_PuntoComa

    ID              shift and go to state 120


state 93

    (25) funcRead -> PR_read TO_PAROP . ID agregaReadCuad TO_PARCLO TO_PuntoComa

    ID              shift and go to state 121


state 94

    (80) funcionesDibuja -> PR_circulo TO_PAROP . ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    ID              shift and go to state 122


state 95

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP . ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    ID              shift and go to state 123


state 96

    (82) funcionesDibuja -> PR_espiral TO_PAROP . ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    ID              shift and go to state 124


state 97

    (83) funcionesDibuja -> PR_estrella TO_PAROP . ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    ID              shift and go to state 125


state 98

    (13) decParametros -> decTipo ID . meteVariable
    (14) decParametros -> decTipo ID . meteVariable TO_COMA decParametros
    (47) meteVariable -> . empty
    (116) empty -> .

    TO_COMA         reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)

    meteVariable                   shift and go to state 126
    empty                          shift and go to state 45

state 99

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO . TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad

    TO_BRACKOP      shift and go to state 127


state 100

    (15) mainBloque -> cambiaScope funcCiclos mainBloque .

    TO_BRACKCLO     reduce using rule 15 (mainBloque -> cambiaScope funcCiclos mainBloque .)
    PR_return       reduce using rule 15 (mainBloque -> cambiaScope funcCiclos mainBloque .)


state 101

    (29) funcCiclos -> PR_While TO_PAROP . defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)

    defExpresiones                 shift and go to state 128
    decExpresion                   shift and go to state 105
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 102

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma .

    $end            reduce using rule 1 (programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma .)


state 103

    (76) decSolucion -> TO_PAROP . pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 129
    empty                          shift and go to state 130

state 104

    (30) funcIf -> PR_if TO_PAROP defExpresiones . TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3

    TO_PARCLO       shift and go to state 131


state 105

    (50) defExpresiones -> decExpresion .
    (51) defExpresiones -> decExpresion . PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> decExpresion . PR_or pushPilaOp defExpresiones agregaAndCuad

    TO_PARCLO       reduce using rule 50 (defExpresiones -> decExpresion .)
    TO_CBRACKCLO    reduce using rule 50 (defExpresiones -> decExpresion .)
    TO_PuntoComa    reduce using rule 50 (defExpresiones -> decExpresion .)
    PR_and          shift and go to state 132
    PR_or           shift and go to state 133


state 106

    (53) decExpresion -> miniExp .
    (54) decExpresion -> miniExp . OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> miniExp . OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> miniExp . OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> miniExp . OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> miniExp . OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> miniExp . OP_GREATTEQ pushPilaOp miniExp agregaComparCuad

    PR_and          reduce using rule 53 (decExpresion -> miniExp .)
    PR_or           reduce using rule 53 (decExpresion -> miniExp .)
    TO_PARCLO       reduce using rule 53 (decExpresion -> miniExp .)
    TO_CBRACKCLO    reduce using rule 53 (decExpresion -> miniExp .)
    TO_PuntoComa    reduce using rule 53 (decExpresion -> miniExp .)
    OP_EQUALTO      shift and go to state 134
    OP_DIFF         shift and go to state 135
    OP_LESST        shift and go to state 136
    OP_LESSTEQ      shift and go to state 137
    OP_GREATT       shift and go to state 138
    OP_GREATTEQ     shift and go to state 139


state 107

    (60) miniExp -> microExp .
    (61) miniExp -> microExp . OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> microExp . OP_ADD pushPilaOp miniExp agregaSumResCuad

    OP_EQUALTO      reduce using rule 60 (miniExp -> microExp .)
    OP_DIFF         reduce using rule 60 (miniExp -> microExp .)
    OP_LESST        reduce using rule 60 (miniExp -> microExp .)
    OP_LESSTEQ      reduce using rule 60 (miniExp -> microExp .)
    OP_GREATT       reduce using rule 60 (miniExp -> microExp .)
    OP_GREATTEQ     reduce using rule 60 (miniExp -> microExp .)
    PR_and          reduce using rule 60 (miniExp -> microExp .)
    PR_or           reduce using rule 60 (miniExp -> microExp .)
    TO_PARCLO       reduce using rule 60 (miniExp -> microExp .)
    TO_CBRACKCLO    reduce using rule 60 (miniExp -> microExp .)
    TO_PuntoComa    reduce using rule 60 (miniExp -> microExp .)
    OP_SUBS         shift and go to state 140
    OP_ADD          shift and go to state 141


state 108

    (63) microExp -> micromicroExp .
    (64) microExp -> micromicroExp . OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> micromicroExp . OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> micromicroExp . OP_MOD pushPilaOp microExp agregaMultDivCuad

    OP_SUBS         reduce using rule 63 (microExp -> micromicroExp .)
    OP_ADD          reduce using rule 63 (microExp -> micromicroExp .)
    OP_EQUALTO      reduce using rule 63 (microExp -> micromicroExp .)
    OP_DIFF         reduce using rule 63 (microExp -> micromicroExp .)
    OP_LESST        reduce using rule 63 (microExp -> micromicroExp .)
    OP_LESSTEQ      reduce using rule 63 (microExp -> micromicroExp .)
    OP_GREATT       reduce using rule 63 (microExp -> micromicroExp .)
    OP_GREATTEQ     reduce using rule 63 (microExp -> micromicroExp .)
    PR_and          reduce using rule 63 (microExp -> micromicroExp .)
    PR_or           reduce using rule 63 (microExp -> micromicroExp .)
    TO_PARCLO       reduce using rule 63 (microExp -> micromicroExp .)
    TO_CBRACKCLO    reduce using rule 63 (microExp -> micromicroExp .)
    TO_PuntoComa    reduce using rule 63 (microExp -> micromicroExp .)
    OP_MULT         shift and go to state 142
    OP_DIV          shift and go to state 143
    OP_MOD          shift and go to state 144


state 109

    (67) micromicroExp -> decSolucion .
    (68) micromicroExp -> decSolucion . OP_POW pushPilaOp micromicroExp agregaPowCuad

    OP_MULT         reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_DIV          reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_MOD          reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_SUBS         reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_ADD          reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_EQUALTO      reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_DIFF         reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_LESST        reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_LESSTEQ      reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_GREATT       reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_GREATTEQ     reduce using rule 67 (micromicroExp -> decSolucion .)
    PR_and          reduce using rule 67 (micromicroExp -> decSolucion .)
    PR_or           reduce using rule 67 (micromicroExp -> decSolucion .)
    TO_PARCLO       reduce using rule 67 (micromicroExp -> decSolucion .)
    TO_CBRACKCLO    reduce using rule 67 (micromicroExp -> decSolucion .)
    TO_PuntoComa    reduce using rule 67 (micromicroExp -> decSolucion .)
    OP_POW          shift and go to state 145


state 110

    (69) decSolucion -> ID . pushPilaVar
    (70) decSolucion -> ID . TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (77) llamadaDeFunciones -> ID . eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (88) pushPilaVar -> . empty
    (110) eraCuadruplo -> .
    (116) empty -> .

    TO_CBRACKOP     shift and go to state 147
    TO_PAROP        reduce using rule 110 (eraCuadruplo -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaVar                    shift and go to state 146
    eraCuadruplo                   shift and go to state 88
    empty                          shift and go to state 91

state 111

    (71) decSolucion -> TO_INT . agregaIntCuad
    (89) agregaIntCuad -> . empty
    (116) empty -> .

    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    agregaIntCuad                  shift and go to state 148
    empty                          shift and go to state 149

state 112

    (72) decSolucion -> TO_FLOAT . agregaFloatCuad
    (90) agregaFloatCuad -> . empty
    (116) empty -> .

    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    agregaFloatCuad                shift and go to state 150
    empty                          shift and go to state 151

state 113

    (73) decSolucion -> PR_true . agregaBoolCuad
    (91) agregaBoolCuad -> . empty
    (116) empty -> .

    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    agregaBoolCuad                 shift and go to state 152
    empty                          shift and go to state 153

state 114

    (74) decSolucion -> PR_false . agregaBoolCuad
    (91) agregaBoolCuad -> . empty
    (116) empty -> .

    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    agregaBoolCuad                 shift and go to state 154
    empty                          shift and go to state 153

state 115

    (75) decSolucion -> llamadaDeFunciones .

    OP_POW          reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_MULT         reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_DIV          reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_MOD          reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_SUBS         reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_ADD          reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_EQUALTO      reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_DIFF         reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_LESST        reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_LESSTEQ      reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_GREATT       reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    OP_GREATTEQ     reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    PR_and          reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    PR_or           reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    TO_PARCLO       reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    TO_CBRACKCLO    reduce using rule 75 (decSolucion -> llamadaDeFunciones .)
    TO_PuntoComa    reduce using rule 75 (decSolucion -> llamadaDeFunciones .)


state 116

    (79) llamadaDeFunciones -> empty .

    OP_POW          reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_MULT         reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_DIV          reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_MOD          reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_SUBS         reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_ADD          reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_EQUALTO      reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_DIFF         reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_LESST        reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_LESSTEQ      reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_GREATT       reduce using rule 79 (llamadaDeFunciones -> empty .)
    OP_GREATTEQ     reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_and          reduce using rule 79 (llamadaDeFunciones -> empty .)
    PR_or           reduce using rule 79 (llamadaDeFunciones -> empty .)
    TO_PARCLO       reduce using rule 79 (llamadaDeFunciones -> empty .)
    TO_CBRACKCLO    reduce using rule 79 (llamadaDeFunciones -> empty .)
    TO_PuntoComa    reduce using rule 79 (llamadaDeFunciones -> empty .)


state 117

    (77) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP . decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (84) decParamFuncs -> . ID paramCuadruplo
    (85) decParamFuncs -> . ID paramCuadruplo TO_COMA decParamFuncs
    (86) decParamFuncs -> . empty
    (116) empty -> .

    ID              shift and go to state 155
    TO_PARCLO       reduce using rule 116 (empty -> .)

    decParamFuncs                  shift and go to state 156
    empty                          shift and go to state 157

state 118

    (27) funcIgual -> ID pushPilaVar OP_EQUALS . pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 158
    empty                          shift and go to state 130

state 119

    (28) funcIgual -> ID TO_CBRACKOP defExpresiones . TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad

    TO_CBRACKCLO    shift and go to state 159


state 120

    (24) funcWrite -> PR_write TO_PAROP ID . agregaWriteCuad TO_PARCLO TO_PuntoComa
    (100) agregaWriteCuad -> .

    TO_PARCLO       reduce using rule 100 (agregaWriteCuad -> .)

    agregaWriteCuad                shift and go to state 160

state 121

    (25) funcRead -> PR_read TO_PAROP ID . agregaReadCuad TO_PARCLO TO_PuntoComa
    (101) agregaReadCuad -> .

    TO_PARCLO       reduce using rule 101 (agregaReadCuad -> .)

    agregaReadCuad                 shift and go to state 161

state 122

    (80) funcionesDibuja -> PR_circulo TO_PAROP ID . TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    TO_COMA         shift and go to state 162


state 123

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP ID . TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    TO_COMA         shift and go to state 163


state 124

    (82) funcionesDibuja -> PR_espiral TO_PAROP ID . TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    TO_COMA         shift and go to state 164


state 125

    (83) funcionesDibuja -> PR_estrella TO_PAROP ID . TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    TO_COMA         shift and go to state 165


state 126

    (13) decParametros -> decTipo ID meteVariable .
    (14) decParametros -> decTipo ID meteVariable . TO_COMA decParametros

    TO_PARCLO       reduce using rule 13 (decParametros -> decTipo ID meteVariable .)
    TO_COMA         shift and go to state 166


state 127

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP . mainBloque funcReturn TO_BRACKCLO endProcCuad
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    PR_return       reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    mainBloque                     shift and go to state 167
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 128

    (29) funcCiclos -> PR_While TO_PAROP defExpresiones . TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO

    TO_PARCLO       shift and go to state 168


state 129

    (76) decSolucion -> TO_PAROP pushPilaOp . defExpresiones TO_PARCLO pushPilaOp
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)

    defExpresiones                 shift and go to state 169
    decExpresion                   shift and go to state 105
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 130

    (87) pushPilaOp -> empty .

    ID              reduce using rule 87 (pushPilaOp -> empty .)
    TO_INT          reduce using rule 87 (pushPilaOp -> empty .)
    TO_FLOAT        reduce using rule 87 (pushPilaOp -> empty .)
    PR_true         reduce using rule 87 (pushPilaOp -> empty .)
    PR_false        reduce using rule 87 (pushPilaOp -> empty .)
    TO_PAROP        reduce using rule 87 (pushPilaOp -> empty .)
    PR_circulo      reduce using rule 87 (pushPilaOp -> empty .)
    PR_rectangulo   reduce using rule 87 (pushPilaOp -> empty .)
    PR_espiral      reduce using rule 87 (pushPilaOp -> empty .)
    PR_estrella     reduce using rule 87 (pushPilaOp -> empty .)
    TO_PARCLO       reduce using rule 87 (pushPilaOp -> empty .)
    PR_and          reduce using rule 87 (pushPilaOp -> empty .)
    PR_or           reduce using rule 87 (pushPilaOp -> empty .)
    OP_EQUALTO      reduce using rule 87 (pushPilaOp -> empty .)
    OP_DIFF         reduce using rule 87 (pushPilaOp -> empty .)
    OP_LESST        reduce using rule 87 (pushPilaOp -> empty .)
    OP_LESSTEQ      reduce using rule 87 (pushPilaOp -> empty .)
    OP_GREATT       reduce using rule 87 (pushPilaOp -> empty .)
    OP_GREATTEQ     reduce using rule 87 (pushPilaOp -> empty .)
    OP_SUBS         reduce using rule 87 (pushPilaOp -> empty .)
    OP_ADD          reduce using rule 87 (pushPilaOp -> empty .)
    OP_MULT         reduce using rule 87 (pushPilaOp -> empty .)
    OP_DIV          reduce using rule 87 (pushPilaOp -> empty .)
    OP_MOD          reduce using rule 87 (pushPilaOp -> empty .)
    OP_POW          reduce using rule 87 (pushPilaOp -> empty .)
    TO_PuntoComa    reduce using rule 87 (pushPilaOp -> empty .)
    TO_CBRACKCLO    reduce using rule 87 (pushPilaOp -> empty .)


state 131

    (30) funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO . agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (103) agregaIfCuadP1 -> .

    TO_BRACKOP      reduce using rule 103 (agregaIfCuadP1 -> .)

    agregaIfCuadP1                 shift and go to state 170

state 132

    (51) defExpresiones -> decExpresion PR_and . pushPilaOp defExpresiones agregaAndCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 171
    empty                          shift and go to state 130

state 133

    (52) defExpresiones -> decExpresion PR_or . pushPilaOp defExpresiones agregaAndCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 172
    empty                          shift and go to state 130

state 134

    (54) decExpresion -> miniExp OP_EQUALTO . pushPilaOp miniExp agregaComparCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 173
    empty                          shift and go to state 130

state 135

    (55) decExpresion -> miniExp OP_DIFF . pushPilaOp miniExp agregaComparCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 174
    empty                          shift and go to state 130

state 136

    (56) decExpresion -> miniExp OP_LESST . pushPilaOp miniExp agregaComparCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 175
    empty                          shift and go to state 130

state 137

    (57) decExpresion -> miniExp OP_LESSTEQ . pushPilaOp miniExp agregaComparCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 176
    empty                          shift and go to state 130

state 138

    (58) decExpresion -> miniExp OP_GREATT . pushPilaOp miniExp agregaComparCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 177
    empty                          shift and go to state 130

state 139

    (59) decExpresion -> miniExp OP_GREATTEQ . pushPilaOp miniExp agregaComparCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 178
    empty                          shift and go to state 130

state 140

    (61) miniExp -> microExp OP_SUBS . pushPilaOp miniExp agregaSumResCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 179
    empty                          shift and go to state 130

state 141

    (62) miniExp -> microExp OP_ADD . pushPilaOp miniExp agregaSumResCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 180
    empty                          shift and go to state 130

state 142

    (64) microExp -> micromicroExp OP_MULT . pushPilaOp microExp agregaMultDivCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 181
    empty                          shift and go to state 130

state 143

    (65) microExp -> micromicroExp OP_DIV . pushPilaOp microExp agregaMultDivCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 182
    empty                          shift and go to state 130

state 144

    (66) microExp -> micromicroExp OP_MOD . pushPilaOp microExp agregaMultDivCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 183
    empty                          shift and go to state 130

state 145

    (68) micromicroExp -> decSolucion OP_POW . pushPilaOp micromicroExp agregaPowCuad
    (87) pushPilaOp -> . empty
    (116) empty -> .

    ID              reduce using rule 116 (empty -> .)
    TO_INT          reduce using rule 116 (empty -> .)
    TO_FLOAT        reduce using rule 116 (empty -> .)
    PR_true         reduce using rule 116 (empty -> .)
    PR_false        reduce using rule 116 (empty -> .)
    TO_PAROP        reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 184
    empty                          shift and go to state 130

state 146

    (69) decSolucion -> ID pushPilaVar .

    OP_POW          reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_MULT         reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_DIV          reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_MOD          reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_SUBS         reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_ADD          reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_EQUALTO      reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_DIFF         reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_LESST        reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_LESSTEQ      reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_GREATT       reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    OP_GREATTEQ     reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    PR_and          reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    PR_or           reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    TO_PARCLO       reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    TO_CBRACKCLO    reduce using rule 69 (decSolucion -> ID pushPilaVar .)
    TO_PuntoComa    reduce using rule 69 (decSolucion -> ID pushPilaVar .)


state 147

    (70) decSolucion -> ID TO_CBRACKOP . defExpresiones TO_CBRACKCLO cuadArrPush
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)

    defExpresiones                 shift and go to state 185
    decExpresion                   shift and go to state 105
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 148

    (71) decSolucion -> TO_INT agregaIntCuad .

    OP_POW          reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_MULT         reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_DIV          reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_MOD          reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_SUBS         reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_ADD          reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_EQUALTO      reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_DIFF         reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_LESST        reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_LESSTEQ      reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_GREATT       reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    OP_GREATTEQ     reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    PR_and          reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    PR_or           reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    TO_PARCLO       reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    TO_CBRACKCLO    reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)
    TO_PuntoComa    reduce using rule 71 (decSolucion -> TO_INT agregaIntCuad .)


state 149

    (89) agregaIntCuad -> empty .

    OP_POW          reduce using rule 89 (agregaIntCuad -> empty .)
    OP_MULT         reduce using rule 89 (agregaIntCuad -> empty .)
    OP_DIV          reduce using rule 89 (agregaIntCuad -> empty .)
    OP_MOD          reduce using rule 89 (agregaIntCuad -> empty .)
    OP_SUBS         reduce using rule 89 (agregaIntCuad -> empty .)
    OP_ADD          reduce using rule 89 (agregaIntCuad -> empty .)
    OP_EQUALTO      reduce using rule 89 (agregaIntCuad -> empty .)
    OP_DIFF         reduce using rule 89 (agregaIntCuad -> empty .)
    OP_LESST        reduce using rule 89 (agregaIntCuad -> empty .)
    OP_LESSTEQ      reduce using rule 89 (agregaIntCuad -> empty .)
    OP_GREATT       reduce using rule 89 (agregaIntCuad -> empty .)
    OP_GREATTEQ     reduce using rule 89 (agregaIntCuad -> empty .)
    PR_and          reduce using rule 89 (agregaIntCuad -> empty .)
    PR_or           reduce using rule 89 (agregaIntCuad -> empty .)
    TO_PARCLO       reduce using rule 89 (agregaIntCuad -> empty .)
    TO_CBRACKCLO    reduce using rule 89 (agregaIntCuad -> empty .)
    TO_PuntoComa    reduce using rule 89 (agregaIntCuad -> empty .)


state 150

    (72) decSolucion -> TO_FLOAT agregaFloatCuad .

    OP_POW          reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_MULT         reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_DIV          reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_MOD          reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_SUBS         reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_ADD          reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_EQUALTO      reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_DIFF         reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_LESST        reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_LESSTEQ      reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_GREATT       reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_GREATTEQ     reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    PR_and          reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    PR_or           reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    TO_PARCLO       reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    TO_CBRACKCLO    reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    TO_PuntoComa    reduce using rule 72 (decSolucion -> TO_FLOAT agregaFloatCuad .)


state 151

    (90) agregaFloatCuad -> empty .

    OP_POW          reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_MULT         reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_DIV          reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_MOD          reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_SUBS         reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_ADD          reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_EQUALTO      reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_DIFF         reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_LESST        reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_LESSTEQ      reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_GREATT       reduce using rule 90 (agregaFloatCuad -> empty .)
    OP_GREATTEQ     reduce using rule 90 (agregaFloatCuad -> empty .)
    PR_and          reduce using rule 90 (agregaFloatCuad -> empty .)
    PR_or           reduce using rule 90 (agregaFloatCuad -> empty .)
    TO_PARCLO       reduce using rule 90 (agregaFloatCuad -> empty .)
    TO_CBRACKCLO    reduce using rule 90 (agregaFloatCuad -> empty .)
    TO_PuntoComa    reduce using rule 90 (agregaFloatCuad -> empty .)


state 152

    (73) decSolucion -> PR_true agregaBoolCuad .

    OP_POW          reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_MULT         reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_DIV          reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_MOD          reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_SUBS         reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_ADD          reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_EQUALTO      reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_DIFF         reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_LESST        reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_LESSTEQ      reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_GREATT       reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    OP_GREATTEQ     reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    PR_and          reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    PR_or           reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    TO_PARCLO       reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    TO_CBRACKCLO    reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)
    TO_PuntoComa    reduce using rule 73 (decSolucion -> PR_true agregaBoolCuad .)


state 153

    (91) agregaBoolCuad -> empty .

    OP_POW          reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_MULT         reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_DIV          reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_MOD          reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_SUBS         reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_ADD          reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_EQUALTO      reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_DIFF         reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_LESST        reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_LESSTEQ      reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_GREATT       reduce using rule 91 (agregaBoolCuad -> empty .)
    OP_GREATTEQ     reduce using rule 91 (agregaBoolCuad -> empty .)
    PR_and          reduce using rule 91 (agregaBoolCuad -> empty .)
    PR_or           reduce using rule 91 (agregaBoolCuad -> empty .)
    TO_PARCLO       reduce using rule 91 (agregaBoolCuad -> empty .)
    TO_CBRACKCLO    reduce using rule 91 (agregaBoolCuad -> empty .)
    TO_PuntoComa    reduce using rule 91 (agregaBoolCuad -> empty .)


state 154

    (74) decSolucion -> PR_false agregaBoolCuad .

    OP_POW          reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_MULT         reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_DIV          reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_MOD          reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_SUBS         reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_ADD          reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_EQUALTO      reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_DIFF         reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_LESST        reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_LESSTEQ      reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_GREATT       reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    OP_GREATTEQ     reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    PR_and          reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    PR_or           reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    TO_PARCLO       reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    TO_CBRACKCLO    reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)
    TO_PuntoComa    reduce using rule 74 (decSolucion -> PR_false agregaBoolCuad .)


state 155

    (84) decParamFuncs -> ID . paramCuadruplo
    (85) decParamFuncs -> ID . paramCuadruplo TO_COMA decParamFuncs
    (109) paramCuadruplo -> .

    TO_COMA         reduce using rule 109 (paramCuadruplo -> .)
    TO_PARCLO       reduce using rule 109 (paramCuadruplo -> .)

    paramCuadruplo                 shift and go to state 186

state 156

    (77) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs . TO_PARCLO TO_PuntoComa goSubCuadruplo

    TO_PARCLO       shift and go to state 187


state 157

    (86) decParamFuncs -> empty .

    TO_PARCLO       reduce using rule 86 (decParamFuncs -> empty .)


state 158

    (27) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp . defExpresiones TO_PuntoComa agregaIgualCuad
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    defExpresiones                 shift and go to state 188
    decExpresion                   shift and go to state 105
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 159

    (28) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO . OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad

    OP_EQUALS       shift and go to state 189


state 160

    (24) funcWrite -> PR_write TO_PAROP ID agregaWriteCuad . TO_PARCLO TO_PuntoComa

    TO_PARCLO       shift and go to state 190


state 161

    (25) funcRead -> PR_read TO_PAROP ID agregaReadCuad . TO_PARCLO TO_PuntoComa

    TO_PARCLO       shift and go to state 191


state 162

    (80) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA . ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    ID              shift and go to state 192


state 163

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA . ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    ID              shift and go to state 193


state 164

    (82) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA . ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    ID              shift and go to state 194


state 165

    (83) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA . ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    ID              shift and go to state 195


state 166

    (14) decParametros -> decTipo ID meteVariable TO_COMA . decParametros
    (13) decParametros -> . decTipo ID meteVariable
    (14) decParametros -> . decTipo ID meteVariable TO_COMA decParametros
    (33) decTipo -> . PR_int
    (34) decTipo -> . PR_float
    (35) decTipo -> . PR_bool
    (36) decTipo -> . PR_void

    PR_int          shift and go to state 24
    PR_float        shift and go to state 25
    PR_bool         shift and go to state 26
    PR_void         shift and go to state 27

    decTipo                        shift and go to state 74
    decParametros                  shift and go to state 196

state 167

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque . funcReturn TO_BRACKCLO endProcCuad
    (26) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa

    PR_return       shift and go to state 198

    funcReturn                     shift and go to state 197

state 168

    (29) funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO . agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO
    (103) agregaIfCuadP1 -> .

    TO_BRACKOP      reduce using rule 103 (agregaIfCuadP1 -> .)

    agregaIfCuadP1                 shift and go to state 199

state 169

    (76) decSolucion -> TO_PAROP pushPilaOp defExpresiones . TO_PARCLO pushPilaOp

    TO_PARCLO       shift and go to state 200


state 170

    (30) funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 . TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3

    TO_BRACKOP      shift and go to state 201


state 171

    (51) defExpresiones -> decExpresion PR_and pushPilaOp . defExpresiones agregaAndCuad
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    decExpresion                   shift and go to state 105
    defExpresiones                 shift and go to state 202
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 172

    (52) defExpresiones -> decExpresion PR_or pushPilaOp . defExpresiones agregaAndCuad
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    decExpresion                   shift and go to state 105
    defExpresiones                 shift and go to state 203
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 173

    (54) decExpresion -> miniExp OP_EQUALTO pushPilaOp . miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    miniExp                        shift and go to state 204
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 174

    (55) decExpresion -> miniExp OP_DIFF pushPilaOp . miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    miniExp                        shift and go to state 205
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 175

    (56) decExpresion -> miniExp OP_LESST pushPilaOp . miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    miniExp                        shift and go to state 206
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 176

    (57) decExpresion -> miniExp OP_LESSTEQ pushPilaOp . miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    miniExp                        shift and go to state 207
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 177

    (58) decExpresion -> miniExp OP_GREATT pushPilaOp . miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    miniExp                        shift and go to state 208
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 178

    (59) decExpresion -> miniExp OP_GREATTEQ pushPilaOp . miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    miniExp                        shift and go to state 209
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 179

    (61) miniExp -> microExp OP_SUBS pushPilaOp . miniExp agregaSumResCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    microExp                       shift and go to state 107
    miniExp                        shift and go to state 210
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 180

    (62) miniExp -> microExp OP_ADD pushPilaOp . miniExp agregaSumResCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    microExp                       shift and go to state 107
    miniExp                        shift and go to state 211
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 181

    (64) microExp -> micromicroExp OP_MULT pushPilaOp . microExp agregaMultDivCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    micromicroExp                  shift and go to state 108
    microExp                       shift and go to state 212
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 182

    (65) microExp -> micromicroExp OP_DIV pushPilaOp . microExp agregaMultDivCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    micromicroExp                  shift and go to state 108
    microExp                       shift and go to state 213
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 183

    (66) microExp -> micromicroExp OP_MOD pushPilaOp . microExp agregaMultDivCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    micromicroExp                  shift and go to state 108
    microExp                       shift and go to state 214
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 184

    (68) micromicroExp -> decSolucion OP_POW pushPilaOp . micromicroExp agregaPowCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    decSolucion                    shift and go to state 109
    micromicroExp                  shift and go to state 215
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 185

    (70) decSolucion -> ID TO_CBRACKOP defExpresiones . TO_CBRACKCLO cuadArrPush

    TO_CBRACKCLO    shift and go to state 216


state 186

    (84) decParamFuncs -> ID paramCuadruplo .
    (85) decParamFuncs -> ID paramCuadruplo . TO_COMA decParamFuncs

    TO_PARCLO       reduce using rule 84 (decParamFuncs -> ID paramCuadruplo .)
    TO_COMA         shift and go to state 217


state 187

    (77) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO . TO_PuntoComa goSubCuadruplo

    TO_PuntoComa    shift and go to state 218


state 188

    (27) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones . TO_PuntoComa agregaIgualCuad

    TO_PuntoComa    shift and go to state 219


state 189

    (28) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS . defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (50) defExpresiones -> . decExpresion
    (51) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (53) decExpresion -> . miniExp
    (54) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (55) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (56) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (60) miniExp -> . microExp
    (61) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (62) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (63) microExp -> . micromicroExp
    (64) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (66) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (67) micromicroExp -> . decSolucion
    (68) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (69) decSolucion -> . ID pushPilaVar
    (70) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (71) decSolucion -> . TO_INT agregaIntCuad
    (72) decSolucion -> . TO_FLOAT agregaFloatCuad
    (73) decSolucion -> . PR_true agregaBoolCuad
    (74) decSolucion -> . PR_false agregaBoolCuad
    (75) decSolucion -> . llamadaDeFunciones
    (76) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (116) empty -> .

    ID              shift and go to state 110
    TO_INT          shift and go to state 111
    TO_FLOAT        shift and go to state 112
    PR_true         shift and go to state 113
    PR_false        shift and go to state 114
    TO_PAROP        shift and go to state 103
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73
    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    defExpresiones                 shift and go to state 220
    decExpresion                   shift and go to state 105
    miniExp                        shift and go to state 106
    microExp                       shift and go to state 107
    micromicroExp                  shift and go to state 108
    decSolucion                    shift and go to state 109
    llamadaDeFunciones             shift and go to state 115
    funcionesDibuja                shift and go to state 67
    empty                          shift and go to state 116

state 190

    (24) funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO . TO_PuntoComa

    TO_PuntoComa    shift and go to state 221


state 191

    (25) funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO . TO_PuntoComa

    TO_PuntoComa    shift and go to state 222


state 192

    (80) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID . TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    TO_COMA         shift and go to state 223


state 193

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID . TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    TO_COMA         shift and go to state 224


state 194

    (82) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID . TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    TO_COMA         shift and go to state 225


state 195

    (83) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID . TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    TO_COMA         shift and go to state 226


state 196

    (14) decParametros -> decTipo ID meteVariable TO_COMA decParametros .

    TO_PARCLO       reduce using rule 14 (decParametros -> decTipo ID meteVariable TO_COMA decParametros .)


state 197

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn . TO_BRACKCLO endProcCuad

    TO_BRACKCLO     shift and go to state 227


state 198

    (26) funcReturn -> PR_return . TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa

    TO_PAROP        shift and go to state 228


state 199

    (29) funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 . TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO

    TO_BRACKOP      shift and go to state 229


state 200

    (76) decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO . pushPilaOp
    (87) pushPilaOp -> . empty
    (116) empty -> .

    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    pushPilaOp                     shift and go to state 230
    empty                          shift and go to state 130

state 201

    (30) funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP . mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    mainBloque                     shift and go to state 231
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 202

    (51) defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones . agregaAndCuad
    (93) agregaAndCuad -> .

    TO_PARCLO       reduce using rule 93 (agregaAndCuad -> .)
    TO_CBRACKCLO    reduce using rule 93 (agregaAndCuad -> .)
    TO_PuntoComa    reduce using rule 93 (agregaAndCuad -> .)

    agregaAndCuad                  shift and go to state 232

state 203

    (52) defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones . agregaAndCuad
    (93) agregaAndCuad -> .

    TO_PARCLO       reduce using rule 93 (agregaAndCuad -> .)
    TO_CBRACKCLO    reduce using rule 93 (agregaAndCuad -> .)
    TO_PuntoComa    reduce using rule 93 (agregaAndCuad -> .)

    agregaAndCuad                  shift and go to state 233

state 204

    (54) decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp . agregaComparCuad
    (94) agregaComparCuad -> .

    PR_and          reduce using rule 94 (agregaComparCuad -> .)
    PR_or           reduce using rule 94 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 94 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 94 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 94 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 234

state 205

    (55) decExpresion -> miniExp OP_DIFF pushPilaOp miniExp . agregaComparCuad
    (94) agregaComparCuad -> .

    PR_and          reduce using rule 94 (agregaComparCuad -> .)
    PR_or           reduce using rule 94 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 94 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 94 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 94 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 235

state 206

    (56) decExpresion -> miniExp OP_LESST pushPilaOp miniExp . agregaComparCuad
    (94) agregaComparCuad -> .

    PR_and          reduce using rule 94 (agregaComparCuad -> .)
    PR_or           reduce using rule 94 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 94 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 94 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 94 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 236

state 207

    (57) decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp . agregaComparCuad
    (94) agregaComparCuad -> .

    PR_and          reduce using rule 94 (agregaComparCuad -> .)
    PR_or           reduce using rule 94 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 94 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 94 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 94 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 237

state 208

    (58) decExpresion -> miniExp OP_GREATT pushPilaOp miniExp . agregaComparCuad
    (94) agregaComparCuad -> .

    PR_and          reduce using rule 94 (agregaComparCuad -> .)
    PR_or           reduce using rule 94 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 94 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 94 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 94 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 238

state 209

    (59) decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp . agregaComparCuad
    (94) agregaComparCuad -> .

    PR_and          reduce using rule 94 (agregaComparCuad -> .)
    PR_or           reduce using rule 94 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 94 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 94 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 94 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 239

state 210

    (61) miniExp -> microExp OP_SUBS pushPilaOp miniExp . agregaSumResCuad
    (95) agregaSumResCuad -> .

    OP_EQUALTO      reduce using rule 95 (agregaSumResCuad -> .)
    OP_DIFF         reduce using rule 95 (agregaSumResCuad -> .)
    OP_LESST        reduce using rule 95 (agregaSumResCuad -> .)
    OP_LESSTEQ      reduce using rule 95 (agregaSumResCuad -> .)
    OP_GREATT       reduce using rule 95 (agregaSumResCuad -> .)
    OP_GREATTEQ     reduce using rule 95 (agregaSumResCuad -> .)
    PR_and          reduce using rule 95 (agregaSumResCuad -> .)
    PR_or           reduce using rule 95 (agregaSumResCuad -> .)
    TO_PARCLO       reduce using rule 95 (agregaSumResCuad -> .)
    TO_CBRACKCLO    reduce using rule 95 (agregaSumResCuad -> .)
    TO_PuntoComa    reduce using rule 95 (agregaSumResCuad -> .)

    agregaSumResCuad               shift and go to state 240

state 211

    (62) miniExp -> microExp OP_ADD pushPilaOp miniExp . agregaSumResCuad
    (95) agregaSumResCuad -> .

    OP_EQUALTO      reduce using rule 95 (agregaSumResCuad -> .)
    OP_DIFF         reduce using rule 95 (agregaSumResCuad -> .)
    OP_LESST        reduce using rule 95 (agregaSumResCuad -> .)
    OP_LESSTEQ      reduce using rule 95 (agregaSumResCuad -> .)
    OP_GREATT       reduce using rule 95 (agregaSumResCuad -> .)
    OP_GREATTEQ     reduce using rule 95 (agregaSumResCuad -> .)
    PR_and          reduce using rule 95 (agregaSumResCuad -> .)
    PR_or           reduce using rule 95 (agregaSumResCuad -> .)
    TO_PARCLO       reduce using rule 95 (agregaSumResCuad -> .)
    TO_CBRACKCLO    reduce using rule 95 (agregaSumResCuad -> .)
    TO_PuntoComa    reduce using rule 95 (agregaSumResCuad -> .)

    agregaSumResCuad               shift and go to state 241

state 212

    (64) microExp -> micromicroExp OP_MULT pushPilaOp microExp . agregaMultDivCuad
    (96) agregaMultDivCuad -> .

    OP_SUBS         reduce using rule 96 (agregaMultDivCuad -> .)
    OP_ADD          reduce using rule 96 (agregaMultDivCuad -> .)
    OP_EQUALTO      reduce using rule 96 (agregaMultDivCuad -> .)
    OP_DIFF         reduce using rule 96 (agregaMultDivCuad -> .)
    OP_LESST        reduce using rule 96 (agregaMultDivCuad -> .)
    OP_LESSTEQ      reduce using rule 96 (agregaMultDivCuad -> .)
    OP_GREATT       reduce using rule 96 (agregaMultDivCuad -> .)
    OP_GREATTEQ     reduce using rule 96 (agregaMultDivCuad -> .)
    PR_and          reduce using rule 96 (agregaMultDivCuad -> .)
    PR_or           reduce using rule 96 (agregaMultDivCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaMultDivCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaMultDivCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaMultDivCuad -> .)

    agregaMultDivCuad              shift and go to state 242

state 213

    (65) microExp -> micromicroExp OP_DIV pushPilaOp microExp . agregaMultDivCuad
    (96) agregaMultDivCuad -> .

    OP_SUBS         reduce using rule 96 (agregaMultDivCuad -> .)
    OP_ADD          reduce using rule 96 (agregaMultDivCuad -> .)
    OP_EQUALTO      reduce using rule 96 (agregaMultDivCuad -> .)
    OP_DIFF         reduce using rule 96 (agregaMultDivCuad -> .)
    OP_LESST        reduce using rule 96 (agregaMultDivCuad -> .)
    OP_LESSTEQ      reduce using rule 96 (agregaMultDivCuad -> .)
    OP_GREATT       reduce using rule 96 (agregaMultDivCuad -> .)
    OP_GREATTEQ     reduce using rule 96 (agregaMultDivCuad -> .)
    PR_and          reduce using rule 96 (agregaMultDivCuad -> .)
    PR_or           reduce using rule 96 (agregaMultDivCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaMultDivCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaMultDivCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaMultDivCuad -> .)

    agregaMultDivCuad              shift and go to state 243

state 214

    (66) microExp -> micromicroExp OP_MOD pushPilaOp microExp . agregaMultDivCuad
    (96) agregaMultDivCuad -> .

    OP_SUBS         reduce using rule 96 (agregaMultDivCuad -> .)
    OP_ADD          reduce using rule 96 (agregaMultDivCuad -> .)
    OP_EQUALTO      reduce using rule 96 (agregaMultDivCuad -> .)
    OP_DIFF         reduce using rule 96 (agregaMultDivCuad -> .)
    OP_LESST        reduce using rule 96 (agregaMultDivCuad -> .)
    OP_LESSTEQ      reduce using rule 96 (agregaMultDivCuad -> .)
    OP_GREATT       reduce using rule 96 (agregaMultDivCuad -> .)
    OP_GREATTEQ     reduce using rule 96 (agregaMultDivCuad -> .)
    PR_and          reduce using rule 96 (agregaMultDivCuad -> .)
    PR_or           reduce using rule 96 (agregaMultDivCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaMultDivCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaMultDivCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaMultDivCuad -> .)

    agregaMultDivCuad              shift and go to state 244

state 215

    (68) micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp . agregaPowCuad
    (97) agregaPowCuad -> .

    OP_MULT         reduce using rule 97 (agregaPowCuad -> .)
    OP_DIV          reduce using rule 97 (agregaPowCuad -> .)
    OP_MOD          reduce using rule 97 (agregaPowCuad -> .)
    OP_SUBS         reduce using rule 97 (agregaPowCuad -> .)
    OP_ADD          reduce using rule 97 (agregaPowCuad -> .)
    OP_EQUALTO      reduce using rule 97 (agregaPowCuad -> .)
    OP_DIFF         reduce using rule 97 (agregaPowCuad -> .)
    OP_LESST        reduce using rule 97 (agregaPowCuad -> .)
    OP_LESSTEQ      reduce using rule 97 (agregaPowCuad -> .)
    OP_GREATT       reduce using rule 97 (agregaPowCuad -> .)
    OP_GREATTEQ     reduce using rule 97 (agregaPowCuad -> .)
    PR_and          reduce using rule 97 (agregaPowCuad -> .)
    PR_or           reduce using rule 97 (agregaPowCuad -> .)
    TO_PARCLO       reduce using rule 97 (agregaPowCuad -> .)
    TO_CBRACKCLO    reduce using rule 97 (agregaPowCuad -> .)
    TO_PuntoComa    reduce using rule 97 (agregaPowCuad -> .)

    agregaPowCuad                  shift and go to state 245

state 216

    (70) decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO . cuadArrPush
    (92) cuadArrPush -> . empty
    (116) empty -> .

    OP_POW          reduce using rule 116 (empty -> .)
    OP_MULT         reduce using rule 116 (empty -> .)
    OP_DIV          reduce using rule 116 (empty -> .)
    OP_MOD          reduce using rule 116 (empty -> .)
    OP_SUBS         reduce using rule 116 (empty -> .)
    OP_ADD          reduce using rule 116 (empty -> .)
    OP_EQUALTO      reduce using rule 116 (empty -> .)
    OP_DIFF         reduce using rule 116 (empty -> .)
    OP_LESST        reduce using rule 116 (empty -> .)
    OP_LESSTEQ      reduce using rule 116 (empty -> .)
    OP_GREATT       reduce using rule 116 (empty -> .)
    OP_GREATTEQ     reduce using rule 116 (empty -> .)
    PR_and          reduce using rule 116 (empty -> .)
    PR_or           reduce using rule 116 (empty -> .)
    TO_PARCLO       reduce using rule 116 (empty -> .)
    TO_CBRACKCLO    reduce using rule 116 (empty -> .)
    TO_PuntoComa    reduce using rule 116 (empty -> .)

    cuadArrPush                    shift and go to state 246
    empty                          shift and go to state 247

state 217

    (85) decParamFuncs -> ID paramCuadruplo TO_COMA . decParamFuncs
    (84) decParamFuncs -> . ID paramCuadruplo
    (85) decParamFuncs -> . ID paramCuadruplo TO_COMA decParamFuncs
    (86) decParamFuncs -> . empty
    (116) empty -> .

    ID              shift and go to state 155
    TO_PARCLO       reduce using rule 116 (empty -> .)

    decParamFuncs                  shift and go to state 248
    empty                          shift and go to state 157

state 218

    (77) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa . goSubCuadruplo
    (111) goSubCuadruplo -> .

    PR_if           reduce using rule 111 (goSubCuadruplo -> .)
    PR_int          reduce using rule 111 (goSubCuadruplo -> .)
    PR_float        reduce using rule 111 (goSubCuadruplo -> .)
    PR_bool         reduce using rule 111 (goSubCuadruplo -> .)
    PR_void         reduce using rule 111 (goSubCuadruplo -> .)
    ID              reduce using rule 111 (goSubCuadruplo -> .)
    PR_write        reduce using rule 111 (goSubCuadruplo -> .)
    PR_read         reduce using rule 111 (goSubCuadruplo -> .)
    PR_circulo      reduce using rule 111 (goSubCuadruplo -> .)
    PR_rectangulo   reduce using rule 111 (goSubCuadruplo -> .)
    PR_espiral      reduce using rule 111 (goSubCuadruplo -> .)
    PR_estrella     reduce using rule 111 (goSubCuadruplo -> .)
    PR_While        reduce using rule 111 (goSubCuadruplo -> .)
    TO_BRACKCLO     reduce using rule 111 (goSubCuadruplo -> .)
    PR_return       reduce using rule 111 (goSubCuadruplo -> .)
    OP_POW          reduce using rule 111 (goSubCuadruplo -> .)
    OP_MULT         reduce using rule 111 (goSubCuadruplo -> .)
    OP_DIV          reduce using rule 111 (goSubCuadruplo -> .)
    OP_MOD          reduce using rule 111 (goSubCuadruplo -> .)
    OP_SUBS         reduce using rule 111 (goSubCuadruplo -> .)
    OP_ADD          reduce using rule 111 (goSubCuadruplo -> .)
    OP_EQUALTO      reduce using rule 111 (goSubCuadruplo -> .)
    OP_DIFF         reduce using rule 111 (goSubCuadruplo -> .)
    OP_LESST        reduce using rule 111 (goSubCuadruplo -> .)
    OP_LESSTEQ      reduce using rule 111 (goSubCuadruplo -> .)
    OP_GREATT       reduce using rule 111 (goSubCuadruplo -> .)
    OP_GREATTEQ     reduce using rule 111 (goSubCuadruplo -> .)
    PR_and          reduce using rule 111 (goSubCuadruplo -> .)
    PR_or           reduce using rule 111 (goSubCuadruplo -> .)
    TO_PARCLO       reduce using rule 111 (goSubCuadruplo -> .)
    TO_CBRACKCLO    reduce using rule 111 (goSubCuadruplo -> .)
    TO_PuntoComa    reduce using rule 111 (goSubCuadruplo -> .)

    goSubCuadruplo                 shift and go to state 249

state 219

    (27) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa . agregaIgualCuad
    (98) agregaIgualCuad -> .

    PR_if           reduce using rule 98 (agregaIgualCuad -> .)
    PR_int          reduce using rule 98 (agregaIgualCuad -> .)
    PR_float        reduce using rule 98 (agregaIgualCuad -> .)
    PR_bool         reduce using rule 98 (agregaIgualCuad -> .)
    PR_void         reduce using rule 98 (agregaIgualCuad -> .)
    ID              reduce using rule 98 (agregaIgualCuad -> .)
    PR_write        reduce using rule 98 (agregaIgualCuad -> .)
    PR_read         reduce using rule 98 (agregaIgualCuad -> .)
    PR_circulo      reduce using rule 98 (agregaIgualCuad -> .)
    PR_rectangulo   reduce using rule 98 (agregaIgualCuad -> .)
    PR_espiral      reduce using rule 98 (agregaIgualCuad -> .)
    PR_estrella     reduce using rule 98 (agregaIgualCuad -> .)
    PR_While        reduce using rule 98 (agregaIgualCuad -> .)
    TO_BRACKCLO     reduce using rule 98 (agregaIgualCuad -> .)
    PR_return       reduce using rule 98 (agregaIgualCuad -> .)

    agregaIgualCuad                shift and go to state 250

state 220

    (28) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones . cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (99) cuadruploAsignaArr -> . empty
    (116) empty -> .

    TO_PuntoComa    reduce using rule 116 (empty -> .)

    cuadruploAsignaArr             shift and go to state 251
    empty                          shift and go to state 252

state 221

    (24) funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .

    PR_if           reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_int          reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_float        reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_bool         reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_void         reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    ID              reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_write        reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_read         reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_circulo      reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_rectangulo   reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_espiral      reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_estrella     reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_While        reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_return       reduce using rule 24 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)


state 222

    (25) funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .

    PR_if           reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_int          reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_float        reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_bool         reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_void         reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    ID              reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_write        reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_read         reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_circulo      reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_rectangulo   reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_espiral      reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_estrella     reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_While        reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_return       reduce using rule 25 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)


state 223

    (80) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA . ID TO_PARCLO TO_PuntoComa circuloCuad

    ID              shift and go to state 253


state 224

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA . ID TO_PARCLO TO_PuntoComa rectanguloCuad

    ID              shift and go to state 254


state 225

    (82) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA . ID TO_PARCLO TO_PuntoComa espiralCuad

    ID              shift and go to state 255


state 226

    (83) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA . ID TO_PARCLO TO_PuntoComa estrellaCuad

    ID              shift and go to state 256


state 227

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO . endProcCuad
    (12) endProcCuad -> .

    PR_function     reduce using rule 12 (endProcCuad -> .)
    PR_main         reduce using rule 12 (endProcCuad -> .)

    endProcCuad                    shift and go to state 257

state 228

    (26) funcReturn -> PR_return TO_PAROP . ID agregaReturnCuad TO_PARCLO TO_PuntoComa

    ID              shift and go to state 258


state 229

    (29) funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP . mainBloque agregaIfCuadP2 TO_BRACKCLO
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    mainBloque                     shift and go to state 259
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 230

    (76) decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .

    OP_POW          reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_MULT         reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_DIV          reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_MOD          reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_SUBS         reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_ADD          reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_EQUALTO      reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_DIFF         reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_LESST        reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_LESSTEQ      reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_GREATT       reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_GREATTEQ     reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    PR_and          reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    PR_or           reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    TO_PARCLO       reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    TO_CBRACKCLO    reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    TO_PuntoComa    reduce using rule 76 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)


state 231

    (30) funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque . TO_BRACKCLO funcElse agregaIfCuadP3

    TO_BRACKCLO     shift and go to state 260


state 232

    (51) defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad .

    TO_PARCLO       reduce using rule 51 (defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad .)
    TO_CBRACKCLO    reduce using rule 51 (defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad .)
    TO_PuntoComa    reduce using rule 51 (defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad .)


state 233

    (52) defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad .

    TO_PARCLO       reduce using rule 52 (defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad .)
    TO_CBRACKCLO    reduce using rule 52 (defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad .)
    TO_PuntoComa    reduce using rule 52 (defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad .)


state 234

    (54) decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 54 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 54 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 54 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 54 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 54 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)


state 235

    (55) decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 55 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 55 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 55 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 55 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 55 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)


state 236

    (56) decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 56 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 56 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 56 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 56 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 56 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)


state 237

    (57) decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 57 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 57 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 57 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 57 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 57 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)


state 238

    (58) decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 58 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 58 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 58 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 58 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 58 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)


state 239

    (59) decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 59 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 59 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 59 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 59 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 59 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)


state 240

    (61) miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .

    OP_EQUALTO      reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_DIFF         reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_LESST        reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_LESSTEQ      reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_GREATT       reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_GREATTEQ     reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    PR_and          reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    PR_or           reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    TO_PARCLO       reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    TO_CBRACKCLO    reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    TO_PuntoComa    reduce using rule 61 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)


state 241

    (62) miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .

    OP_EQUALTO      reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_DIFF         reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_LESST        reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_LESSTEQ      reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_GREATT       reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_GREATTEQ     reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    PR_and          reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    PR_or           reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    TO_PARCLO       reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    TO_CBRACKCLO    reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    TO_PuntoComa    reduce using rule 62 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)


state 242

    (64) microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .

    OP_SUBS         reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_ADD          reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_EQUALTO      reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_DIFF         reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_LESST        reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_LESSTEQ      reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATT       reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATTEQ     reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    PR_and          reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    PR_or           reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    TO_PARCLO       reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    TO_CBRACKCLO    reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    TO_PuntoComa    reduce using rule 64 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)


state 243

    (65) microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .

    OP_SUBS         reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_ADD          reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_EQUALTO      reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_DIFF         reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_LESST        reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_LESSTEQ      reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATT       reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATTEQ     reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    PR_and          reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    PR_or           reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    TO_PARCLO       reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    TO_CBRACKCLO    reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    TO_PuntoComa    reduce using rule 65 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)


state 244

    (66) microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .

    OP_SUBS         reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_ADD          reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_EQUALTO      reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_DIFF         reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_LESST        reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_LESSTEQ      reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATT       reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATTEQ     reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    PR_and          reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    PR_or           reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    TO_PARCLO       reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    TO_CBRACKCLO    reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    TO_PuntoComa    reduce using rule 66 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)


state 245

    (68) micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .

    OP_MULT         reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_DIV          reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_MOD          reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_SUBS         reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_ADD          reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_EQUALTO      reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_DIFF         reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_LESST        reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_LESSTEQ      reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_GREATT       reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_GREATTEQ     reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    PR_and          reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    PR_or           reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    TO_PARCLO       reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    TO_CBRACKCLO    reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    TO_PuntoComa    reduce using rule 68 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)


state 246

    (70) decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .

    OP_POW          reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_MULT         reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_DIV          reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_MOD          reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_SUBS         reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_ADD          reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_EQUALTO      reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_DIFF         reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_LESST        reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_LESSTEQ      reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_GREATT       reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_GREATTEQ     reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    PR_and          reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    PR_or           reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    TO_PARCLO       reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    TO_CBRACKCLO    reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    TO_PuntoComa    reduce using rule 70 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)


state 247

    (92) cuadArrPush -> empty .

    OP_POW          reduce using rule 92 (cuadArrPush -> empty .)
    OP_MULT         reduce using rule 92 (cuadArrPush -> empty .)
    OP_DIV          reduce using rule 92 (cuadArrPush -> empty .)
    OP_MOD          reduce using rule 92 (cuadArrPush -> empty .)
    OP_SUBS         reduce using rule 92 (cuadArrPush -> empty .)
    OP_ADD          reduce using rule 92 (cuadArrPush -> empty .)
    OP_EQUALTO      reduce using rule 92 (cuadArrPush -> empty .)
    OP_DIFF         reduce using rule 92 (cuadArrPush -> empty .)
    OP_LESST        reduce using rule 92 (cuadArrPush -> empty .)
    OP_LESSTEQ      reduce using rule 92 (cuadArrPush -> empty .)
    OP_GREATT       reduce using rule 92 (cuadArrPush -> empty .)
    OP_GREATTEQ     reduce using rule 92 (cuadArrPush -> empty .)
    PR_and          reduce using rule 92 (cuadArrPush -> empty .)
    PR_or           reduce using rule 92 (cuadArrPush -> empty .)
    TO_PARCLO       reduce using rule 92 (cuadArrPush -> empty .)
    TO_CBRACKCLO    reduce using rule 92 (cuadArrPush -> empty .)
    TO_PuntoComa    reduce using rule 92 (cuadArrPush -> empty .)


state 248

    (85) decParamFuncs -> ID paramCuadruplo TO_COMA decParamFuncs .

    TO_PARCLO       reduce using rule 85 (decParamFuncs -> ID paramCuadruplo TO_COMA decParamFuncs .)


state 249

    (77) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .

    PR_if           reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_int          reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_float        reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_bool         reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_void         reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    ID              reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_write        reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_read         reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_circulo      reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_rectangulo   reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_espiral      reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_estrella     reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_While        reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    TO_BRACKCLO     reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_return       reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_POW          reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_MULT         reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_DIV          reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_MOD          reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_SUBS         reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_ADD          reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_EQUALTO      reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_DIFF         reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_LESST        reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_LESSTEQ      reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_GREATT       reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_GREATTEQ     reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_and          reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_or           reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    TO_PARCLO       reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    TO_CBRACKCLO    reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    TO_PuntoComa    reduce using rule 77 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)


state 250

    (27) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .

    PR_if           reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_int          reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_float        reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_bool         reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_void         reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    ID              reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_write        reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_read         reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_circulo      reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_rectangulo   reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_espiral      reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_estrella     reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_While        reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    TO_BRACKCLO     reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)
    PR_return       reduce using rule 27 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad .)


state 251

    (28) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr . TO_PuntoComa agregaIgualCuad

    TO_PuntoComa    shift and go to state 261


state 252

    (99) cuadruploAsignaArr -> empty .

    TO_PuntoComa    reduce using rule 99 (cuadruploAsignaArr -> empty .)


state 253

    (80) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID . TO_PARCLO TO_PuntoComa circuloCuad

    TO_PARCLO       shift and go to state 262


state 254

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID . TO_PARCLO TO_PuntoComa rectanguloCuad

    TO_PARCLO       shift and go to state 263


state 255

    (82) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID . TO_PARCLO TO_PuntoComa espiralCuad

    TO_PARCLO       shift and go to state 264


state 256

    (83) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID . TO_PARCLO TO_PuntoComa estrellaCuad

    TO_PARCLO       shift and go to state 265


state 257

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad .

    PR_function     reduce using rule 10 (defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad .)
    PR_main         reduce using rule 10 (defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad .)


state 258

    (26) funcReturn -> PR_return TO_PAROP ID . agregaReturnCuad TO_PARCLO TO_PuntoComa
    (102) agregaReturnCuad -> .

    TO_PARCLO       reduce using rule 102 (agregaReturnCuad -> .)

    agregaReturnCuad               shift and go to state 266

state 259

    (29) funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque . agregaIfCuadP2 TO_BRACKCLO
    (104) agregaIfCuadP2 -> .

    TO_BRACKCLO     reduce using rule 104 (agregaIfCuadP2 -> .)

    agregaIfCuadP2                 shift and go to state 267

state 260

    (30) funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO . funcElse agregaIfCuadP3
    (31) funcElse -> . agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO
    (32) funcElse -> . empty
    (104) agregaIfCuadP2 -> .
    (116) empty -> .

    PR_else         reduce using rule 104 (agregaIfCuadP2 -> .)
    PR_if           reduce using rule 116 (empty -> .)
    PR_int          reduce using rule 116 (empty -> .)
    PR_float        reduce using rule 116 (empty -> .)
    PR_bool         reduce using rule 116 (empty -> .)
    PR_void         reduce using rule 116 (empty -> .)
    ID              reduce using rule 116 (empty -> .)
    PR_write        reduce using rule 116 (empty -> .)
    PR_read         reduce using rule 116 (empty -> .)
    PR_circulo      reduce using rule 116 (empty -> .)
    PR_rectangulo   reduce using rule 116 (empty -> .)
    PR_espiral      reduce using rule 116 (empty -> .)
    PR_estrella     reduce using rule 116 (empty -> .)
    PR_While        reduce using rule 116 (empty -> .)
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_return       reduce using rule 116 (empty -> .)

    funcElse                       shift and go to state 268
    agregaIfCuadP2                 shift and go to state 269
    empty                          shift and go to state 270

state 261

    (28) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa . agregaIgualCuad
    (98) agregaIgualCuad -> .

    PR_if           reduce using rule 98 (agregaIgualCuad -> .)
    PR_int          reduce using rule 98 (agregaIgualCuad -> .)
    PR_float        reduce using rule 98 (agregaIgualCuad -> .)
    PR_bool         reduce using rule 98 (agregaIgualCuad -> .)
    PR_void         reduce using rule 98 (agregaIgualCuad -> .)
    ID              reduce using rule 98 (agregaIgualCuad -> .)
    PR_write        reduce using rule 98 (agregaIgualCuad -> .)
    PR_read         reduce using rule 98 (agregaIgualCuad -> .)
    PR_circulo      reduce using rule 98 (agregaIgualCuad -> .)
    PR_rectangulo   reduce using rule 98 (agregaIgualCuad -> .)
    PR_espiral      reduce using rule 98 (agregaIgualCuad -> .)
    PR_estrella     reduce using rule 98 (agregaIgualCuad -> .)
    PR_While        reduce using rule 98 (agregaIgualCuad -> .)
    TO_BRACKCLO     reduce using rule 98 (agregaIgualCuad -> .)
    PR_return       reduce using rule 98 (agregaIgualCuad -> .)

    agregaIgualCuad                shift and go to state 271

state 262

    (80) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO . TO_PuntoComa circuloCuad

    TO_PuntoComa    shift and go to state 272


state 263

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO . TO_PuntoComa rectanguloCuad

    TO_PuntoComa    shift and go to state 273


state 264

    (82) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO . TO_PuntoComa espiralCuad

    TO_PuntoComa    shift and go to state 274


state 265

    (83) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO . TO_PuntoComa estrellaCuad

    TO_PuntoComa    shift and go to state 275


state 266

    (26) funcReturn -> PR_return TO_PAROP ID agregaReturnCuad . TO_PARCLO TO_PuntoComa

    TO_PARCLO       shift and go to state 276


state 267

    (29) funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 . TO_BRACKCLO

    TO_BRACKCLO     shift and go to state 277


state 268

    (30) funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse . agregaIfCuadP3
    (105) agregaIfCuadP3 -> .

    PR_if           reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_int          reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_float        reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_bool         reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_void         reduce using rule 105 (agregaIfCuadP3 -> .)
    ID              reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_write        reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_read         reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_circulo      reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_rectangulo   reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_espiral      reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_estrella     reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_While        reduce using rule 105 (agregaIfCuadP3 -> .)
    TO_BRACKCLO     reduce using rule 105 (agregaIfCuadP3 -> .)
    PR_return       reduce using rule 105 (agregaIfCuadP3 -> .)

    agregaIfCuadP3                 shift and go to state 278

state 269

    (31) funcElse -> agregaIfCuadP2 . PR_else TO_BRACKOP mainBloque TO_BRACKCLO

    PR_else         shift and go to state 279


state 270

    (32) funcElse -> empty .

    PR_if           reduce using rule 32 (funcElse -> empty .)
    PR_int          reduce using rule 32 (funcElse -> empty .)
    PR_float        reduce using rule 32 (funcElse -> empty .)
    PR_bool         reduce using rule 32 (funcElse -> empty .)
    PR_void         reduce using rule 32 (funcElse -> empty .)
    ID              reduce using rule 32 (funcElse -> empty .)
    PR_write        reduce using rule 32 (funcElse -> empty .)
    PR_read         reduce using rule 32 (funcElse -> empty .)
    PR_circulo      reduce using rule 32 (funcElse -> empty .)
    PR_rectangulo   reduce using rule 32 (funcElse -> empty .)
    PR_espiral      reduce using rule 32 (funcElse -> empty .)
    PR_estrella     reduce using rule 32 (funcElse -> empty .)
    PR_While        reduce using rule 32 (funcElse -> empty .)
    TO_BRACKCLO     reduce using rule 32 (funcElse -> empty .)
    PR_return       reduce using rule 32 (funcElse -> empty .)


state 271

    (28) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .

    PR_if           reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_int          reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_float        reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_bool         reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_void         reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    ID              reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_write        reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_read         reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_circulo      reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_rectangulo   reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_espiral      reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_estrella     reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_While        reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    TO_BRACKCLO     reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_return       reduce using rule 28 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)


state 272

    (80) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa . circuloCuad
    (112) circuloCuad -> .

    PR_if           reduce using rule 112 (circuloCuad -> .)
    PR_int          reduce using rule 112 (circuloCuad -> .)
    PR_float        reduce using rule 112 (circuloCuad -> .)
    PR_bool         reduce using rule 112 (circuloCuad -> .)
    PR_void         reduce using rule 112 (circuloCuad -> .)
    ID              reduce using rule 112 (circuloCuad -> .)
    PR_write        reduce using rule 112 (circuloCuad -> .)
    PR_read         reduce using rule 112 (circuloCuad -> .)
    PR_circulo      reduce using rule 112 (circuloCuad -> .)
    PR_rectangulo   reduce using rule 112 (circuloCuad -> .)
    PR_espiral      reduce using rule 112 (circuloCuad -> .)
    PR_estrella     reduce using rule 112 (circuloCuad -> .)
    PR_While        reduce using rule 112 (circuloCuad -> .)
    TO_BRACKCLO     reduce using rule 112 (circuloCuad -> .)
    PR_return       reduce using rule 112 (circuloCuad -> .)
    OP_POW          reduce using rule 112 (circuloCuad -> .)
    OP_MULT         reduce using rule 112 (circuloCuad -> .)
    OP_DIV          reduce using rule 112 (circuloCuad -> .)
    OP_MOD          reduce using rule 112 (circuloCuad -> .)
    OP_SUBS         reduce using rule 112 (circuloCuad -> .)
    OP_ADD          reduce using rule 112 (circuloCuad -> .)
    OP_EQUALTO      reduce using rule 112 (circuloCuad -> .)
    OP_DIFF         reduce using rule 112 (circuloCuad -> .)
    OP_LESST        reduce using rule 112 (circuloCuad -> .)
    OP_LESSTEQ      reduce using rule 112 (circuloCuad -> .)
    OP_GREATT       reduce using rule 112 (circuloCuad -> .)
    OP_GREATTEQ     reduce using rule 112 (circuloCuad -> .)
    PR_and          reduce using rule 112 (circuloCuad -> .)
    PR_or           reduce using rule 112 (circuloCuad -> .)
    TO_PARCLO       reduce using rule 112 (circuloCuad -> .)
    TO_CBRACKCLO    reduce using rule 112 (circuloCuad -> .)
    TO_PuntoComa    reduce using rule 112 (circuloCuad -> .)

    circuloCuad                    shift and go to state 280

state 273

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa . rectanguloCuad
    (113) rectanguloCuad -> .

    PR_if           reduce using rule 113 (rectanguloCuad -> .)
    PR_int          reduce using rule 113 (rectanguloCuad -> .)
    PR_float        reduce using rule 113 (rectanguloCuad -> .)
    PR_bool         reduce using rule 113 (rectanguloCuad -> .)
    PR_void         reduce using rule 113 (rectanguloCuad -> .)
    ID              reduce using rule 113 (rectanguloCuad -> .)
    PR_write        reduce using rule 113 (rectanguloCuad -> .)
    PR_read         reduce using rule 113 (rectanguloCuad -> .)
    PR_circulo      reduce using rule 113 (rectanguloCuad -> .)
    PR_rectangulo   reduce using rule 113 (rectanguloCuad -> .)
    PR_espiral      reduce using rule 113 (rectanguloCuad -> .)
    PR_estrella     reduce using rule 113 (rectanguloCuad -> .)
    PR_While        reduce using rule 113 (rectanguloCuad -> .)
    TO_BRACKCLO     reduce using rule 113 (rectanguloCuad -> .)
    PR_return       reduce using rule 113 (rectanguloCuad -> .)
    OP_POW          reduce using rule 113 (rectanguloCuad -> .)
    OP_MULT         reduce using rule 113 (rectanguloCuad -> .)
    OP_DIV          reduce using rule 113 (rectanguloCuad -> .)
    OP_MOD          reduce using rule 113 (rectanguloCuad -> .)
    OP_SUBS         reduce using rule 113 (rectanguloCuad -> .)
    OP_ADD          reduce using rule 113 (rectanguloCuad -> .)
    OP_EQUALTO      reduce using rule 113 (rectanguloCuad -> .)
    OP_DIFF         reduce using rule 113 (rectanguloCuad -> .)
    OP_LESST        reduce using rule 113 (rectanguloCuad -> .)
    OP_LESSTEQ      reduce using rule 113 (rectanguloCuad -> .)
    OP_GREATT       reduce using rule 113 (rectanguloCuad -> .)
    OP_GREATTEQ     reduce using rule 113 (rectanguloCuad -> .)
    PR_and          reduce using rule 113 (rectanguloCuad -> .)
    PR_or           reduce using rule 113 (rectanguloCuad -> .)
    TO_PARCLO       reduce using rule 113 (rectanguloCuad -> .)
    TO_CBRACKCLO    reduce using rule 113 (rectanguloCuad -> .)
    TO_PuntoComa    reduce using rule 113 (rectanguloCuad -> .)

    rectanguloCuad                 shift and go to state 281

state 274

    (82) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa . espiralCuad
    (114) espiralCuad -> .

    PR_if           reduce using rule 114 (espiralCuad -> .)
    PR_int          reduce using rule 114 (espiralCuad -> .)
    PR_float        reduce using rule 114 (espiralCuad -> .)
    PR_bool         reduce using rule 114 (espiralCuad -> .)
    PR_void         reduce using rule 114 (espiralCuad -> .)
    ID              reduce using rule 114 (espiralCuad -> .)
    PR_write        reduce using rule 114 (espiralCuad -> .)
    PR_read         reduce using rule 114 (espiralCuad -> .)
    PR_circulo      reduce using rule 114 (espiralCuad -> .)
    PR_rectangulo   reduce using rule 114 (espiralCuad -> .)
    PR_espiral      reduce using rule 114 (espiralCuad -> .)
    PR_estrella     reduce using rule 114 (espiralCuad -> .)
    PR_While        reduce using rule 114 (espiralCuad -> .)
    TO_BRACKCLO     reduce using rule 114 (espiralCuad -> .)
    PR_return       reduce using rule 114 (espiralCuad -> .)
    OP_POW          reduce using rule 114 (espiralCuad -> .)
    OP_MULT         reduce using rule 114 (espiralCuad -> .)
    OP_DIV          reduce using rule 114 (espiralCuad -> .)
    OP_MOD          reduce using rule 114 (espiralCuad -> .)
    OP_SUBS         reduce using rule 114 (espiralCuad -> .)
    OP_ADD          reduce using rule 114 (espiralCuad -> .)
    OP_EQUALTO      reduce using rule 114 (espiralCuad -> .)
    OP_DIFF         reduce using rule 114 (espiralCuad -> .)
    OP_LESST        reduce using rule 114 (espiralCuad -> .)
    OP_LESSTEQ      reduce using rule 114 (espiralCuad -> .)
    OP_GREATT       reduce using rule 114 (espiralCuad -> .)
    OP_GREATTEQ     reduce using rule 114 (espiralCuad -> .)
    PR_and          reduce using rule 114 (espiralCuad -> .)
    PR_or           reduce using rule 114 (espiralCuad -> .)
    TO_PARCLO       reduce using rule 114 (espiralCuad -> .)
    TO_CBRACKCLO    reduce using rule 114 (espiralCuad -> .)
    TO_PuntoComa    reduce using rule 114 (espiralCuad -> .)

    espiralCuad                    shift and go to state 282

state 275

    (83) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa . estrellaCuad
    (115) estrellaCuad -> .

    PR_if           reduce using rule 115 (estrellaCuad -> .)
    PR_int          reduce using rule 115 (estrellaCuad -> .)
    PR_float        reduce using rule 115 (estrellaCuad -> .)
    PR_bool         reduce using rule 115 (estrellaCuad -> .)
    PR_void         reduce using rule 115 (estrellaCuad -> .)
    ID              reduce using rule 115 (estrellaCuad -> .)
    PR_write        reduce using rule 115 (estrellaCuad -> .)
    PR_read         reduce using rule 115 (estrellaCuad -> .)
    PR_circulo      reduce using rule 115 (estrellaCuad -> .)
    PR_rectangulo   reduce using rule 115 (estrellaCuad -> .)
    PR_espiral      reduce using rule 115 (estrellaCuad -> .)
    PR_estrella     reduce using rule 115 (estrellaCuad -> .)
    PR_While        reduce using rule 115 (estrellaCuad -> .)
    TO_BRACKCLO     reduce using rule 115 (estrellaCuad -> .)
    PR_return       reduce using rule 115 (estrellaCuad -> .)
    OP_POW          reduce using rule 115 (estrellaCuad -> .)
    OP_MULT         reduce using rule 115 (estrellaCuad -> .)
    OP_DIV          reduce using rule 115 (estrellaCuad -> .)
    OP_MOD          reduce using rule 115 (estrellaCuad -> .)
    OP_SUBS         reduce using rule 115 (estrellaCuad -> .)
    OP_ADD          reduce using rule 115 (estrellaCuad -> .)
    OP_EQUALTO      reduce using rule 115 (estrellaCuad -> .)
    OP_DIFF         reduce using rule 115 (estrellaCuad -> .)
    OP_LESST        reduce using rule 115 (estrellaCuad -> .)
    OP_LESSTEQ      reduce using rule 115 (estrellaCuad -> .)
    OP_GREATT       reduce using rule 115 (estrellaCuad -> .)
    OP_GREATTEQ     reduce using rule 115 (estrellaCuad -> .)
    PR_and          reduce using rule 115 (estrellaCuad -> .)
    PR_or           reduce using rule 115 (estrellaCuad -> .)
    TO_PARCLO       reduce using rule 115 (estrellaCuad -> .)
    TO_CBRACKCLO    reduce using rule 115 (estrellaCuad -> .)
    TO_PuntoComa    reduce using rule 115 (estrellaCuad -> .)

    estrellaCuad                   shift and go to state 283

state 276

    (26) funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO . TO_PuntoComa

    TO_PuntoComa    shift and go to state 284


state 277

    (29) funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .

    PR_if           reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_int          reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_float        reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_bool         reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_void         reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    ID              reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_write        reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_read         reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_circulo      reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_rectangulo   reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_espiral      reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_estrella     reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_While        reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    TO_BRACKCLO     reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)
    PR_return       reduce using rule 29 (funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO .)


state 278

    (30) funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .

    PR_if           reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_int          reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_float        reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_bool         reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_void         reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    ID              reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_write        reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_read         reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_circulo      reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_rectangulo   reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_espiral      reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_estrella     reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_While        reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    TO_BRACKCLO     reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)
    PR_return       reduce using rule 30 (funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 .)


state 279

    (31) funcElse -> agregaIfCuadP2 PR_else . TO_BRACKOP mainBloque TO_BRACKCLO

    TO_BRACKOP      shift and go to state 285


state 280

    (80) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .

    PR_if           reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_int          reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_float        reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_bool         reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_void         reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    ID              reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_write        reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_read         reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_circulo      reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_rectangulo   reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_espiral      reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_estrella     reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_While        reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    TO_BRACKCLO     reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_return       reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_POW          reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_MULT         reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_DIV          reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_MOD          reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_SUBS         reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_ADD          reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_EQUALTO      reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_DIFF         reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_LESST        reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_LESSTEQ      reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_GREATT       reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_GREATTEQ     reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_and          reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_or           reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    TO_PARCLO       reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    TO_CBRACKCLO    reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    TO_PuntoComa    reduce using rule 80 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)


state 281

    (81) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .

    PR_if           reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_int          reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_float        reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_bool         reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_void         reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    ID              reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_write        reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_read         reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_circulo      reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_rectangulo   reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_espiral      reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_estrella     reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_While        reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    TO_BRACKCLO     reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_return       reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_POW          reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_MULT         reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_DIV          reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_MOD          reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_SUBS         reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_ADD          reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_EQUALTO      reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_DIFF         reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_LESST        reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_LESSTEQ      reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_GREATT       reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_GREATTEQ     reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_and          reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_or           reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    TO_PARCLO       reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    TO_CBRACKCLO    reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    TO_PuntoComa    reduce using rule 81 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)


state 282

    (82) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .

    PR_if           reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_int          reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_float        reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_bool         reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_void         reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    ID              reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_write        reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_read         reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_circulo      reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_rectangulo   reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_espiral      reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_estrella     reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_While        reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    TO_BRACKCLO     reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_return       reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_POW          reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_MULT         reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_DIV          reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_MOD          reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_SUBS         reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_ADD          reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_EQUALTO      reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_DIFF         reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_LESST        reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_LESSTEQ      reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_GREATT       reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_GREATTEQ     reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_and          reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_or           reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    TO_PARCLO       reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    TO_CBRACKCLO    reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    TO_PuntoComa    reduce using rule 82 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)


state 283

    (83) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .

    PR_if           reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_int          reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_float        reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_bool         reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_void         reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    ID              reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_write        reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_read         reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_circulo      reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_rectangulo   reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_espiral      reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_estrella     reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_While        reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    TO_BRACKCLO     reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_return       reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_POW          reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_MULT         reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_DIV          reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_MOD          reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_SUBS         reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_ADD          reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_EQUALTO      reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_DIFF         reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_LESST        reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_LESSTEQ      reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_GREATT       reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_GREATTEQ     reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_and          reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_or           reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    TO_PARCLO       reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    TO_CBRACKCLO    reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    TO_PuntoComa    reduce using rule 83 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)


state 284

    (26) funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .

    TO_BRACKCLO     reduce using rule 26 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)


state 285

    (31) funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP . mainBloque TO_BRACKCLO
    (15) mainBloque -> . cambiaScope funcCiclos mainBloque
    (16) mainBloque -> . funcIf mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . empty
    (5) cambiaScope -> .
    (30) funcIf -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3
    (37) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (38) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (39) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (77) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (78) llamadaDeFunciones -> . funcionesDibuja
    (79) llamadaDeFunciones -> . empty
    (27) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad
    (28) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (24) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (25) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (116) empty -> .
    (80) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (81) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (82) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (83) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! reduce/reduce conflict for PR_While resolved using rule 5 (cambiaScope -> .)
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        reduce using rule 5 (cambiaScope -> .)
    PR_if           shift and go to state 65
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 66
    PR_write        shift and go to state 68
    PR_read         shift and go to state 69
    TO_BRACKCLO     reduce using rule 116 (empty -> .)
    PR_circulo      shift and go to state 70
    PR_rectangulo   shift and go to state 71
    PR_espiral      shift and go to state 72
    PR_estrella     shift and go to state 73

  ! PR_if           [ reduce using rule 116 (empty -> .) ]
  ! PR_int          [ reduce using rule 116 (empty -> .) ]
  ! PR_float        [ reduce using rule 116 (empty -> .) ]
  ! PR_bool         [ reduce using rule 116 (empty -> .) ]
  ! PR_void         [ reduce using rule 116 (empty -> .) ]
  ! ID              [ reduce using rule 116 (empty -> .) ]
  ! PR_write        [ reduce using rule 116 (empty -> .) ]
  ! PR_read         [ reduce using rule 116 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 116 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 116 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 116 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 116 (empty -> .) ]
  ! PR_While        [ reduce using rule 116 (empty -> .) ]

    mainBloque                     shift and go to state 286
    cambiaScope                    shift and go to state 56
    funcIf                         shift and go to state 58
    defVariables                   shift and go to state 59
    llamadaDeFunciones             shift and go to state 60
    funcIgual                      shift and go to state 61
    funcWrite                      shift and go to state 62
    funcRead                       shift and go to state 63
    empty                          shift and go to state 64
    funcionesDibuja                shift and go to state 67

state 286

    (31) funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque . TO_BRACKCLO

    TO_BRACKCLO     shift and go to state 287


state 287

    (31) funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .

    PR_if           reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_int          reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_float        reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_bool         reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_void         reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    ID              reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_write        reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_read         reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_circulo      reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_rectangulo   reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_espiral      reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_estrella     reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_While        reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    TO_BRACKCLO     reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_return       reduce using rule 31 (funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PR_if in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 58 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 58 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 59 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 59 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 60 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 78 resolved as shift
WARNING: shift/reduce conflict for ID in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 201 resolved as shift
WARNING: shift/reduce conflict for ID in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 201 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 229 resolved as shift
WARNING: shift/reduce conflict for ID in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 229 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 285 resolved as shift
WARNING: shift/reduce conflict for ID in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 285 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 285 resolved as shift
WARNING: reduce/reduce conflict in state 53 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 53
WARNING: reduce/reduce conflict in state 58 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 58
WARNING: reduce/reduce conflict in state 59 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 59
WARNING: reduce/reduce conflict in state 60 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 61
WARNING: reduce/reduce conflict in state 62 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 62
WARNING: reduce/reduce conflict in state 63 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 64 resolved using rule (mainBloque -> empty)
WARNING: rejected rule (llamadaDeFunciones -> empty) in state 64
WARNING: reduce/reduce conflict in state 78 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 78
WARNING: reduce/reduce conflict in state 127 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 127
WARNING: reduce/reduce conflict in state 201 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 201
WARNING: reduce/reduce conflict in state 229 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 229
WARNING: reduce/reduce conflict in state 285 resolved using rule (cambiaScope -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 285
