
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID OP_ADD OP_DIFF OP_DIV OP_EQUALS OP_EQUALTO OP_GREATT OP_GREATTEQ OP_LESST OP_LESSTEQ OP_MOD OP_MULT OP_POW OP_SUBS PR_While PR_and PR_bool PR_circulo PR_else PR_espiral PR_estrella PR_false PR_float PR_function PR_global PR_if PR_int PR_main PR_or PR_read PR_rectangulo PR_return PR_true PR_void PR_write TO_BRACKCLO TO_BRACKOP TO_CBRACKCLO TO_CBRACKOP TO_COMA TO_FLOAT TO_INT TO_PARCLO TO_PAROP TO_PuntoComaprograma : startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endProgramastartQuad :fillMainQuad :endPrograma : cambiaScope : varGlobales : PR_global defVariables varGlobales\n\t\t\t| emptydeclaraFunciones : PR_function defFuncion declaraFunciones\n\t\t\t| emptydefFuncion : decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuadagregaFuncion : endProcCuad : decParametros : decTipo ID meteVariable\n\t         | decTipo ID meteVariable TO_COMA decParametrosmainBloque : cambiaScope funcCiclos mainBloque\n\t \t\t| funcIf mainBloque\n\t \t\t| defVariables mainBloque\n\t \t\t| llamadaDeFunciones mainBloque\n\t \t\t| funcIgual mainBloque\n\t \t\t| funcWrite mainBloque\n\t \t\t| funcRead mainBloque\n\t\t\t| emptysetMainFuncionValores :  funcWrite : PR_write TO_PAROP  ID agregaWriteCuad TO_PARCLO TO_PuntoComa funcRead : PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa funcReturn : PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa funcIgual : ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad\n\t\t\t  | ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad funcCiclos : PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO  funcIf : PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3 funcElse : agregaIfCuadP2 PR_else TO_BRACKOP  mainBloque TO_BRACKCLO\n\t\t| empty decTipo : PR_int\n\t         | PR_float\n\t         | PR_bool\n\t         | PR_void\n\t         defVariables : PR_int  tipoVar defVar1 TO_PuntoComa\n\t         | PR_float  tipoVar defVar1 TO_PuntoComa\n\t         | PR_bool  tipoVar defVar1 TO_PuntoComa\n\t         | PR_void  tipoVar defVar1 TO_PuntoComa\n\t         defVar1 : variable defVar2\n \t\t\t \t| arreglo defVar2  defVar2 : TO_COMA defVar1\n \t\t\t \t| empty  variable : ID meteVariabletipoVar : emptymeteVariable : empty arreglo : ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArrescribeArr : emptydefExpresiones : decExpresion\n\t  \t\t\t| decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad\n\t  \t\t\t| decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad decExpresion : miniExp\n\t    | miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad\n\t    | miniExp OP_DIFF pushPilaOp  miniExp agregaComparCuad\n        | miniExp OP_LESST pushPilaOp  miniExp agregaComparCuad\n        | miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad\n        | miniExp OP_GREATT pushPilaOp  miniExp agregaComparCuad\n        | miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad  miniExp : microExp\n\t \t\t\t| microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad\n\t \t\t\t| microExp OP_ADD pushPilaOp miniExp  agregaSumResCuad microExp : micromicroExp\n\t\t\t     | micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad\n\t \t\t     | micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad\n\t \t\t     | micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad micromicroExp : decSolucion\n\t\t\t\t\t  | decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad decSolucion : ID pushPilaVar\n\t\t\t| ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush\n\t\t\t| TO_INT agregaIntCuad\n\t\t\t| TO_FLOAT agregaFloatCuad\n\t\t\t| PR_true agregaBoolCuad\n\t\t\t| PR_false agregaBoolCuad\n\t\t\t| llamadaDeFunciones\n\t\t\t| TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp   llamadaDeFunciones : ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo\n\t\t\t\t\t\t\t| funcionesDibuja\n\t\t\t\t\t\t\t| empty funcionesDibuja : PR_circulo  TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad\n                        | PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad\n                        | PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad\n                        | PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad decParamFuncs : ID paramCuadruplo\n\t    \t | ID paramCuadruplo TO_COMA decParamFuncs\n\t    \t | empty pushPilaOp : emptypushPilaVar : emptyagregaIntCuad : empty agregaFloatCuad : empty agregaBoolCuad : empty cuadArrPush : emptyagregaAndCuad :  agregaComparCuad : agregaSumResCuad : agregaMultDivCuad : agregaPowCuad : agregaIgualCuad : cuadruploAsignaArr : emptyagregaWriteCuad : agregaReadCuad : agregaReturnCuad :  agregaIfCuadP1 :  agregaIfCuadP2 :  agregaIfCuadP3 : WhileQuad1 : WhileQuad2 : WhileQuad3 : paramCuadruplo : eraCuadruplo : goSubCuadruplo :  circuloCuad :  rectanguloCuad :  espiralCuad :  estrellaCuad : empty : '
    
_lr_action_items = {'PR_global':([0,2,7,38,46,47,48,],[-2,4,4,-37,-38,-39,-40,]),'PR_function':([0,2,3,5,6,7,15,22,38,46,47,48,227,257,],[-2,-116,-5,-7,13,-116,-6,13,-37,-38,-39,-40,-12,-10,]),'PR_main':([0,2,3,5,6,7,12,14,15,22,36,38,46,47,48,227,257,],[-2,-116,-5,-7,-116,-116,21,-9,-6,-116,-8,-37,-38,-39,-40,-12,-10,]),'$end':([1,80,102,],[0,-4,-1,]),'PR_int':([4,13,38,46,47,48,49,53,54,58,59,60,61,62,63,64,67,78,127,166,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[8,24,-37,-38,-39,-40,-23,8,24,8,8,8,8,8,8,-79,-78,8,8,24,8,-111,-98,-24,-25,8,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,8,-31,]),'PR_float':([4,13,38,46,47,48,49,53,54,58,59,60,61,62,63,64,67,78,127,166,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[9,25,-37,-38,-39,-40,-23,9,25,9,9,9,9,9,9,-79,-78,9,9,25,9,-111,-98,-24,-25,9,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,9,-31,]),'PR_bool':([4,13,38,46,47,48,49,53,54,58,59,60,61,62,63,64,67,78,127,166,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[10,26,-37,-38,-39,-40,-23,10,26,10,10,10,10,10,10,-79,-78,10,10,26,10,-111,-98,-24,-25,10,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,10,-31,]),'PR_void':([4,13,38,46,47,48,49,53,54,58,59,60,61,62,63,64,67,78,127,166,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[11,27,-37,-38,-39,-40,-23,11,27,11,11,11,11,11,11,-79,-78,11,11,27,11,-111,-98,-24,-25,11,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,11,-31,]),'ID':([8,9,10,11,16,17,18,19,20,23,24,25,26,27,38,40,46,47,48,49,53,58,59,60,61,62,63,64,67,74,78,87,90,92,93,94,95,96,97,101,103,117,118,127,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,162,163,164,165,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,201,217,218,219,221,222,223,224,225,226,228,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-116,-116,-116,-116,31,-46,31,31,31,37,-33,-34,-35,-36,-37,31,-38,-39,-40,-23,66,66,66,66,66,66,66,-79,-78,98,66,110,110,120,121,122,123,124,125,110,-116,155,-116,66,110,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,110,110,192,193,194,195,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,66,155,-111,-98,-24,-25,253,254,255,256,258,66,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,66,-31,]),'TO_BRACKOP':([21,35,99,131,168,170,199,279,],[-3,49,127,-103,-103,201,229,285,]),'TO_PuntoComa':([28,29,30,31,32,33,34,39,41,42,43,45,51,55,67,76,77,91,105,106,107,108,109,110,111,112,113,114,115,116,118,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,220,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,251,252,262,263,264,265,272,273,274,275,276,280,281,282,283,],[38,-116,-116,-116,46,47,48,-41,-44,-42,-45,-47,-43,-116,-78,-48,-49,-88,-50,-53,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,218,219,-116,221,222,-116,-93,-93,-94,-94,-94,-94,-94,-94,-95,-95,-96,-96,-96,-97,-116,-111,-116,-76,-51,-52,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,-66,-68,-70,-92,-77,261,-99,272,273,274,275,-112,-113,-114,-115,284,-80,-81,-82,-83,]),'TO_COMA':([29,30,31,43,45,55,76,77,98,122,123,124,125,126,155,186,192,193,194,195,],[40,40,-116,-45,-47,-116,-48,-49,-116,162,163,164,165,166,-109,217,223,224,225,226,]),'TO_CBRACKOP':([31,66,110,],[44,90,147,]),'TO_PAROP':([37,50,65,66,68,69,70,71,72,73,79,87,88,90,101,103,110,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,198,],[-11,54,87,-110,92,93,94,95,96,97,101,103,117,103,103,-116,-110,-116,103,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,228,]),'PR_if':([38,46,47,48,49,53,58,59,60,61,62,63,64,67,78,127,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-37,-38,-39,-40,-23,65,65,65,65,65,65,65,-79,-78,65,65,65,-111,-98,-24,-25,65,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,65,-31,]),'PR_write':([38,46,47,48,49,53,58,59,60,61,62,63,64,67,78,127,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-37,-38,-39,-40,-23,68,68,68,68,68,68,68,-79,-78,68,68,68,-111,-98,-24,-25,68,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,68,-31,]),'PR_read':([38,46,47,48,49,53,58,59,60,61,62,63,64,67,78,127,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-37,-38,-39,-40,-23,69,69,69,69,69,69,69,-79,-78,69,69,69,-111,-98,-24,-25,69,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,69,-31,]),'PR_circulo':([38,46,47,48,49,53,58,59,60,61,62,63,64,67,78,87,90,101,103,118,127,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-37,-38,-39,-40,-23,70,70,70,70,70,70,70,-79,-78,70,70,70,70,-116,-116,70,70,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-111,-98,-24,-25,70,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,70,-31,]),'PR_rectangulo':([38,46,47,48,49,53,58,59,60,61,62,63,64,67,78,87,90,101,103,118,127,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-37,-38,-39,-40,-23,71,71,71,71,71,71,71,-79,-78,71,71,71,71,-116,-116,71,71,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-111,-98,-24,-25,71,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,71,-31,]),'PR_espiral':([38,46,47,48,49,53,58,59,60,61,62,63,64,67,78,87,90,101,103,118,127,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-37,-38,-39,-40,-23,72,72,72,72,72,72,72,-79,-78,72,72,72,72,-116,-116,72,72,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-111,-98,-24,-25,72,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,72,-31,]),'PR_estrella':([38,46,47,48,49,53,58,59,60,61,62,63,64,67,78,87,90,101,103,118,127,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-37,-38,-39,-40,-23,73,73,73,73,73,73,73,-79,-78,73,73,73,73,-116,-116,73,73,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-111,-98,-24,-25,73,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,73,-31,]),'PR_While':([38,46,47,48,49,53,56,58,59,60,61,62,63,64,67,78,127,201,218,219,221,222,229,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,285,287,],[-37,-38,-39,-40,-23,-5,79,-5,-5,-5,-5,-5,-5,-79,-78,-5,-5,-5,-111,-98,-24,-25,-5,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,-5,-31,]),'TO_BRACKCLO':([38,46,47,48,49,53,57,58,59,60,61,62,63,64,67,78,81,82,83,84,85,86,100,197,201,218,219,221,222,229,231,249,250,259,260,261,267,268,270,271,272,273,274,275,277,278,280,281,282,283,284,285,286,287,],[-37,-38,-39,-40,-23,-116,80,-116,-116,-116,-116,-116,-116,-22,-78,-116,-16,-17,-18,-19,-20,-21,-15,227,-116,-111,-98,-24,-25,-116,260,-77,-27,-104,-116,-98,277,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,-26,-116,287,-31,]),'PR_return':([38,46,47,48,58,59,60,61,62,63,64,67,78,81,82,83,84,85,86,100,127,167,218,219,221,222,249,250,260,261,268,270,271,272,273,274,275,277,278,280,281,282,283,287,],[-37,-38,-39,-40,-116,-116,-116,-116,-116,-116,-22,-78,-116,-16,-17,-18,-19,-20,-21,-15,-116,198,-111,-98,-24,-25,-77,-27,-116,-98,-105,-32,-28,-112,-113,-114,-115,-29,-30,-80,-81,-82,-83,-31,]),'TO_INT':([44,87,90,101,103,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,],[52,111,111,111,-116,-116,111,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'TO_PARCLO':([45,67,75,87,91,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,126,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,160,161,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,196,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,253,254,255,256,258,266,272,273,274,275,280,281,282,283,],[-47,-78,99,-116,-88,-116,-116,-116,131,-50,-53,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-100,-101,-13,168,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-71,-89,-72,-90,-73,-91,-74,-109,187,-86,190,191,200,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-84,-14,-116,-93,-93,-94,-94,-94,-94,-94,-94,-95,-95,-96,-96,-96,-97,-116,-116,-111,-76,-51,-52,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,-66,-68,-70,-92,-85,-77,262,263,264,265,-102,276,-112,-113,-114,-115,-80,-81,-82,-83,]),'TO_CBRACKCLO':([52,67,90,91,105,106,107,108,109,110,111,112,113,114,115,116,119,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[55,-78,-116,-88,-50,-53,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,159,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,216,-116,-93,-93,-94,-94,-94,-94,-94,-94,-95,-95,-96,-96,-96,-97,-116,-111,-76,-51,-52,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_EQUALS':([66,89,91,159,],[-116,118,-88,189,]),'OP_POW':([67,87,90,91,101,103,109,110,111,112,113,114,115,116,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,216,218,230,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,145,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-111,-76,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_MULT':([67,87,90,91,101,103,108,109,110,111,112,113,114,115,116,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,215,216,218,230,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,142,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-97,-116,-111,-76,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_DIV':([67,87,90,91,101,103,108,109,110,111,112,113,114,115,116,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,215,216,218,230,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,143,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-97,-116,-111,-76,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_MOD':([67,87,90,91,101,103,108,109,110,111,112,113,114,115,116,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,215,216,218,230,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,144,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-97,-116,-111,-76,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_SUBS':([67,87,90,91,101,103,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,212,213,214,215,216,218,230,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,140,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-96,-96,-96,-97,-116,-111,-76,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_ADD':([67,87,90,91,101,103,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,212,213,214,215,216,218,230,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,141,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-96,-96,-96,-97,-116,-111,-76,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_EQUALTO':([67,87,90,91,101,103,106,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,179,180,181,182,183,184,189,200,210,211,212,213,214,215,216,218,230,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,134,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-95,-95,-96,-96,-96,-97,-116,-111,-76,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_DIFF':([67,87,90,91,101,103,106,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,179,180,181,182,183,184,189,200,210,211,212,213,214,215,216,218,230,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,135,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-95,-95,-96,-96,-96,-97,-116,-111,-76,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_LESST':([67,87,90,91,101,103,106,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,179,180,181,182,183,184,189,200,210,211,212,213,214,215,216,218,230,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,136,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-95,-95,-96,-96,-96,-97,-116,-111,-76,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_LESSTEQ':([67,87,90,91,101,103,106,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,179,180,181,182,183,184,189,200,210,211,212,213,214,215,216,218,230,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,137,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-95,-95,-96,-96,-96,-97,-116,-111,-76,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_GREATT':([67,87,90,91,101,103,106,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,179,180,181,182,183,184,189,200,210,211,212,213,214,215,216,218,230,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,138,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-95,-95,-96,-96,-96,-97,-116,-111,-76,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'OP_GREATTEQ':([67,87,90,91,101,103,106,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,179,180,181,182,183,184,189,200,210,211,212,213,214,215,216,218,230,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,139,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-95,-95,-96,-96,-96,-97,-116,-111,-76,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'PR_and':([67,87,90,91,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,204,205,206,207,208,209,210,211,212,213,214,215,216,218,230,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,132,-53,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-94,-94,-94,-94,-94,-94,-95,-95,-96,-96,-96,-97,-116,-111,-76,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'PR_or':([67,87,90,91,101,103,105,106,107,108,109,110,111,112,113,114,115,116,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,204,205,206,207,208,209,210,211,212,213,214,215,216,218,230,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,272,273,274,275,280,281,282,283,],[-78,-116,-116,-88,-116,-116,133,-53,-60,-63,-67,-116,-116,-116,-116,-116,-75,-79,-116,-116,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-69,-116,-71,-89,-72,-90,-73,-91,-74,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-94,-94,-94,-94,-94,-94,-95,-95,-96,-96,-96,-97,-116,-111,-76,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,-66,-68,-70,-92,-77,-112,-113,-114,-115,-80,-81,-82,-83,]),'TO_FLOAT':([87,90,101,103,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,],[112,112,112,-116,-116,112,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'PR_true':([87,90,101,103,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,],[113,113,113,-116,-116,113,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'PR_false':([87,90,101,103,118,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,],[114,114,114,-116,-116,114,-87,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'PR_else':([260,269,],[-104,279,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'startQuad':([0,],[2,]),'varGlobales':([2,7,],[3,15,]),'empty':([2,6,7,8,9,10,11,22,29,30,31,53,55,58,59,60,61,62,63,66,78,87,90,98,101,103,110,111,112,113,114,117,118,127,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,200,201,216,217,220,229,260,285,],[5,14,5,17,17,17,17,14,41,41,45,64,77,64,64,64,64,64,64,91,64,116,116,45,116,130,91,149,151,153,153,157,130,64,116,130,130,130,130,130,130,130,130,130,130,130,130,130,130,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,130,64,247,157,252,64,270,64,]),'cambiaScope':([3,53,58,59,60,61,62,63,78,127,201,229,285,],[6,56,56,56,56,56,56,56,56,56,56,56,56,]),'defVariables':([4,53,58,59,60,61,62,63,78,127,201,229,285,],[7,59,59,59,59,59,59,59,59,59,59,59,59,]),'declaraFunciones':([6,22,],[12,36,]),'tipoVar':([8,9,10,11,],[16,18,19,20,]),'defFuncion':([13,],[22,]),'decTipo':([13,54,166,],[23,74,74,]),'defVar1':([16,18,19,20,40,],[28,32,33,34,51,]),'variable':([16,18,19,20,40,],[29,29,29,29,29,]),'arreglo':([16,18,19,20,40,],[30,30,30,30,30,]),'fillMainQuad':([21,],[35,]),'defVar2':([29,30,],[39,42,]),'meteVariable':([31,98,],[43,126,]),'agregaFuncion':([37,],[50,]),'setMainFuncionValores':([49,],[53,]),'mainBloque':([53,58,59,60,61,62,63,78,127,201,229,285,],[57,81,82,83,84,85,86,100,167,231,259,286,]),'funcIf':([53,58,59,60,61,62,63,78,127,201,229,285,],[58,58,58,58,58,58,58,58,58,58,58,58,]),'llamadaDeFunciones':([53,58,59,60,61,62,63,78,87,90,101,127,129,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,201,229,285,],[60,60,60,60,60,60,60,60,115,115,115,60,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,60,60,60,]),'funcIgual':([53,58,59,60,61,62,63,78,127,201,229,285,],[61,61,61,61,61,61,61,61,61,61,61,61,]),'funcWrite':([53,58,59,60,61,62,63,78,127,201,229,285,],[62,62,62,62,62,62,62,62,62,62,62,62,]),'funcRead':([53,58,59,60,61,62,63,78,127,201,229,285,],[63,63,63,63,63,63,63,63,63,63,63,63,]),'funcionesDibuja':([53,58,59,60,61,62,63,78,87,90,101,127,129,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,201,229,285,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'decParametros':([54,166,],[75,196,]),'escribeArr':([55,],[76,]),'funcCiclos':([56,],[78,]),'eraCuadruplo':([66,110,],[88,88,]),'pushPilaVar':([66,110,],[89,146,]),'endPrograma':([80,],[102,]),'defExpresiones':([87,90,101,129,147,158,171,172,189,],[104,119,128,169,185,188,202,203,220,]),'decExpresion':([87,90,101,129,147,158,171,172,189,],[105,105,105,105,105,105,105,105,105,]),'miniExp':([87,90,101,129,147,158,171,172,173,174,175,176,177,178,179,180,189,],[106,106,106,106,106,106,106,106,204,205,206,207,208,209,210,211,106,]),'microExp':([87,90,101,129,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,189,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,212,213,214,107,]),'micromicroExp':([87,90,101,129,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,215,108,]),'decSolucion':([87,90,101,129,147,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'pushPilaOp':([103,118,132,133,134,135,136,137,138,139,140,141,142,143,144,145,200,],[129,158,171,172,173,174,175,176,177,178,179,180,181,182,183,184,230,]),'agregaIntCuad':([111,],[148,]),'agregaFloatCuad':([112,],[150,]),'agregaBoolCuad':([113,114,],[152,154,]),'decParamFuncs':([117,217,],[156,248,]),'agregaWriteCuad':([120,],[160,]),'agregaReadCuad':([121,],[161,]),'agregaIfCuadP1':([131,168,],[170,199,]),'paramCuadruplo':([155,],[186,]),'funcReturn':([167,],[197,]),'agregaAndCuad':([202,203,],[232,233,]),'agregaComparCuad':([204,205,206,207,208,209,],[234,235,236,237,238,239,]),'agregaSumResCuad':([210,211,],[240,241,]),'agregaMultDivCuad':([212,213,214,],[242,243,244,]),'agregaPowCuad':([215,],[245,]),'cuadArrPush':([216,],[246,]),'goSubCuadruplo':([218,],[249,]),'agregaIgualCuad':([219,261,],[250,271,]),'cuadruploAsignaArr':([220,],[251,]),'endProcCuad':([227,],[257,]),'agregaReturnCuad':([258,],[266,]),'agregaIfCuadP2':([259,260,],[267,269,]),'funcElse':([260,],[268,]),'agregaIfCuadP3':([268,],[278,]),'circuloCuad':([272,],[280,]),'rectanguloCuad':([273,],[281,]),'espiralCuad':([274,],[282,]),'estrellaCuad':([275,],[283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma','programa',11,'p_programa','Doodlr.py',61),
  ('startQuad -> <empty>','startQuad',0,'p_startQuad','Doodlr.py',65),
  ('fillMainQuad -> <empty>','fillMainQuad',0,'p_fillMainQuad','Doodlr.py',71),
  ('endPrograma -> <empty>','endPrograma',0,'p_endPrograma','Doodlr.py',78),
  ('cambiaScope -> <empty>','cambiaScope',0,'p_cambiaScope','Doodlr.py',83),
  ('varGlobales -> PR_global defVariables varGlobales','varGlobales',3,'p_varGlobales','Doodlr.py',90),
  ('varGlobales -> empty','varGlobales',1,'p_varGlobales','Doodlr.py',91),
  ('declaraFunciones -> PR_function defFuncion declaraFunciones','declaraFunciones',3,'p_declaraFunciones','Doodlr.py',95),
  ('declaraFunciones -> empty','declaraFunciones',1,'p_declaraFunciones','Doodlr.py',96),
  ('defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque funcReturn TO_BRACKCLO endProcCuad','defFuncion',11,'p_defFuncion','Doodlr.py',99),
  ('agregaFuncion -> <empty>','agregaFuncion',0,'p_agregaFuncion','Doodlr.py',102),
  ('endProcCuad -> <empty>','endProcCuad',0,'p_endProcCuad','Doodlr.py',120),
  ('decParametros -> decTipo ID meteVariable','decParametros',3,'p_decParametros','Doodlr.py',125),
  ('decParametros -> decTipo ID meteVariable TO_COMA decParametros','decParametros',5,'p_decParametros','Doodlr.py',126),
  ('mainBloque -> cambiaScope funcCiclos mainBloque','mainBloque',3,'p_mainBloque','Doodlr.py',130),
  ('mainBloque -> funcIf mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',131),
  ('mainBloque -> defVariables mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',132),
  ('mainBloque -> llamadaDeFunciones mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',133),
  ('mainBloque -> funcIgual mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',134),
  ('mainBloque -> funcWrite mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',135),
  ('mainBloque -> funcRead mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',136),
  ('mainBloque -> empty','mainBloque',1,'p_mainBloque','Doodlr.py',137),
  ('setMainFuncionValores -> <empty>','setMainFuncionValores',0,'p_setMainFuncionValores','Doodlr.py',141),
  ('funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa','funcWrite',6,'p_funcWrite','Doodlr.py',152),
  ('funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa','funcRead',6,'p_funcRead','Doodlr.py',156),
  ('funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa','funcReturn',6,'p_funcReturn','Doodlr.py',160),
  ('funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa agregaIgualCuad','funcIgual',7,'p_funcIgual','Doodlr.py',164),
  ('funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad','funcIgual',9,'p_funcIgual','Doodlr.py',165),
  ('funcCiclos -> PR_While TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque agregaIfCuadP2 TO_BRACKCLO','funcCiclos',9,'p_funcCiclos','Doodlr.py',169),
  ('funcIf -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO funcElse agregaIfCuadP3','funcIf',10,'p_funcIf','Doodlr.py',175),
  ('funcElse -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO','funcElse',5,'p_funcElse','Doodlr.py',179),
  ('funcElse -> empty','funcElse',1,'p_funcElse','Doodlr.py',180),
  ('decTipo -> PR_int','decTipo',1,'p_decTipo','Doodlr.py',185),
  ('decTipo -> PR_float','decTipo',1,'p_decTipo','Doodlr.py',186),
  ('decTipo -> PR_bool','decTipo',1,'p_decTipo','Doodlr.py',187),
  ('decTipo -> PR_void','decTipo',1,'p_decTipo','Doodlr.py',188),
  ('defVariables -> PR_int tipoVar defVar1 TO_PuntoComa','defVariables',4,'p_defVariables','Doodlr.py',193),
  ('defVariables -> PR_float tipoVar defVar1 TO_PuntoComa','defVariables',4,'p_defVariables','Doodlr.py',194),
  ('defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa','defVariables',4,'p_defVariables','Doodlr.py',195),
  ('defVariables -> PR_void tipoVar defVar1 TO_PuntoComa','defVariables',4,'p_defVariables','Doodlr.py',196),
  ('defVar1 -> variable defVar2','defVar1',2,'p_defVar1','Doodlr.py',200),
  ('defVar1 -> arreglo defVar2','defVar1',2,'p_defVar1','Doodlr.py',201),
  ('defVar2 -> TO_COMA defVar1','defVar2',2,'p_defVar2','Doodlr.py',204),
  ('defVar2 -> empty','defVar2',1,'p_defVar2','Doodlr.py',205),
  ('variable -> ID meteVariable','variable',2,'p_variable','Doodlr.py',209),
  ('tipoVar -> empty','tipoVar',1,'p_tipoVar','Doodlr.py',213),
  ('meteVariable -> empty','meteVariable',1,'p_meteVariable','Doodlr.py',219),
  ('arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr','arreglo',5,'p_arreglo','Doodlr.py',241),
  ('escribeArr -> empty','escribeArr',1,'p_escribeArr','Doodlr.py',244),
  ('defExpresiones -> decExpresion','defExpresiones',1,'p_defExpresiones','Doodlr.py',267),
  ('defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad','defExpresiones',5,'p_defExpresiones','Doodlr.py',268),
  ('defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad','defExpresiones',5,'p_defExpresiones','Doodlr.py',269),
  ('decExpresion -> miniExp','decExpresion',1,'p_decExpresion','Doodlr.py',273),
  ('decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',274),
  ('decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',275),
  ('decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',276),
  ('decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',277),
  ('decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',278),
  ('decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',279),
  ('miniExp -> microExp','miniExp',1,'p_miniExp','Doodlr.py',283),
  ('miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad','miniExp',5,'p_miniExp','Doodlr.py',284),
  ('miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad','miniExp',5,'p_miniExp','Doodlr.py',285),
  ('microExp -> micromicroExp','microExp',1,'p_microExp','Doodlr.py',289),
  ('microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad','microExp',5,'p_microExp','Doodlr.py',290),
  ('microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad','microExp',5,'p_microExp','Doodlr.py',291),
  ('microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad','microExp',5,'p_microExp','Doodlr.py',292),
  ('micromicroExp -> decSolucion','micromicroExp',1,'p_micromicroExp','Doodlr.py',296),
  ('micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad','micromicroExp',5,'p_micromicroExp','Doodlr.py',297),
  ('decSolucion -> ID pushPilaVar','decSolucion',2,'p_decSolucion','Doodlr.py',301),
  ('decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush','decSolucion',5,'p_decSolucion','Doodlr.py',302),
  ('decSolucion -> TO_INT agregaIntCuad','decSolucion',2,'p_decSolucion','Doodlr.py',303),
  ('decSolucion -> TO_FLOAT agregaFloatCuad','decSolucion',2,'p_decSolucion','Doodlr.py',304),
  ('decSolucion -> PR_true agregaBoolCuad','decSolucion',2,'p_decSolucion','Doodlr.py',305),
  ('decSolucion -> PR_false agregaBoolCuad','decSolucion',2,'p_decSolucion','Doodlr.py',306),
  ('decSolucion -> llamadaDeFunciones','decSolucion',1,'p_decSolucion','Doodlr.py',307),
  ('decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp','decSolucion',5,'p_decSolucion','Doodlr.py',308),
  ('llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo','llamadaDeFunciones',7,'p_llamadaDeFunciones','Doodlr.py',314),
  ('llamadaDeFunciones -> funcionesDibuja','llamadaDeFunciones',1,'p_llamadaDeFunciones','Doodlr.py',315),
  ('llamadaDeFunciones -> empty','llamadaDeFunciones',1,'p_llamadaDeFunciones','Doodlr.py',316),
  ('funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad','funcionesDibuja',10,'p_funcionesDibuja','Doodlr.py',319),
  ('funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad','funcionesDibuja',10,'p_funcionesDibuja','Doodlr.py',320),
  ('funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad','funcionesDibuja',10,'p_funcionesDibuja','Doodlr.py',321),
  ('funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad','funcionesDibuja',10,'p_funcionesDibuja','Doodlr.py',322),
  ('decParamFuncs -> ID paramCuadruplo','decParamFuncs',2,'p_decParamFuncs','Doodlr.py',326),
  ('decParamFuncs -> ID paramCuadruplo TO_COMA decParamFuncs','decParamFuncs',4,'p_decParamFuncs','Doodlr.py',327),
  ('decParamFuncs -> empty','decParamFuncs',1,'p_decParamFuncs','Doodlr.py',328),
  ('pushPilaOp -> empty','pushPilaOp',1,'p_pushPilaOp','Doodlr.py',335),
  ('pushPilaVar -> empty','pushPilaVar',1,'p_pushPilaVar','Doodlr.py',341),
  ('agregaIntCuad -> empty','agregaIntCuad',1,'p_agregaIntCuad','Doodlr.py',347),
  ('agregaFloatCuad -> empty','agregaFloatCuad',1,'p_agregaFloatCuad','Doodlr.py',352),
  ('agregaBoolCuad -> empty','agregaBoolCuad',1,'p_agregaBoolCuad','Doodlr.py',357),
  ('cuadArrPush -> empty','cuadArrPush',1,'p_CuadruploArrpush','Doodlr.py',364),
  ('agregaAndCuad -> <empty>','agregaAndCuad',0,'p_agregaAndCuad','Doodlr.py',388),
  ('agregaComparCuad -> <empty>','agregaComparCuad',0,'p_agregaComparCuad','Doodlr.py',412),
  ('agregaSumResCuad -> <empty>','agregaSumResCuad',0,'p_agregaSumResCuad','Doodlr.py',438),
  ('agregaMultDivCuad -> <empty>','agregaMultDivCuad',0,'p_agregaMultDivCuad','Doodlr.py',461),
  ('agregaPowCuad -> <empty>','agregaPowCuad',0,'p_agregaPowCuad','Doodlr.py',484),
  ('agregaIgualCuad -> <empty>','agregaIgualCuad',0,'p_agregaIgualCuad','Doodlr.py',508),
  ('cuadruploAsignaArr -> empty','cuadruploAsignaArr',1,'p_CuadruploAsignaARR','Doodlr.py',527),
  ('agregaWriteCuad -> <empty>','agregaWriteCuad',0,'p_agregaWriteCuad','Doodlr.py',555),
  ('agregaReadCuad -> <empty>','agregaReadCuad',0,'p_agregaReadCuad','Doodlr.py',562),
  ('agregaReturnCuad -> <empty>','agregaReturnCuad',0,'p_agregaReturnCuad','Doodlr.py',568),
  ('agregaIfCuadP1 -> <empty>','agregaIfCuadP1',0,'p_agregaIfCuadP1','Doodlr.py',576),
  ('agregaIfCuadP2 -> <empty>','agregaIfCuadP2',0,'p_agregaIfCuadP2','Doodlr.py',581),
  ('agregaIfCuadP3 -> <empty>','agregaIfCuadP3',0,'p_agregaIfCuadP3','Doodlr.py',588),
  ('WhileQuad1 -> <empty>','WhileQuad1',0,'p_WhileQuad1','Doodlr.py',594),
  ('WhileQuad2 -> <empty>','WhileQuad2',0,'p_WhileQuad2','Doodlr.py',600),
  ('WhileQuad3 -> <empty>','WhileQuad3',0,'p_WhileQuad3','Doodlr.py',605),
  ('paramCuadruplo -> <empty>','paramCuadruplo',0,'p_paramCuadruplo','Doodlr.py',616),
  ('eraCuadruplo -> <empty>','eraCuadruplo',0,'p_eraCuadruplo','Doodlr.py',625),
  ('goSubCuadruplo -> <empty>','goSubCuadruplo',0,'p_goSubCuadruplo','Doodlr.py',636),
  ('circuloCuad -> <empty>','circuloCuad',0,'p_circuloCuad','Doodlr.py',645),
  ('rectanguloCuad -> <empty>','rectanguloCuad',0,'p_rectanguloCuad','Doodlr.py',652),
  ('espiralCuad -> <empty>','espiralCuad',0,'p_espiralCuad','Doodlr.py',659),
  ('estrellaCuad -> <empty>','estrellaCuad',0,'p_estrellaCuad','Doodlr.py',666),
  ('empty -> <empty>','empty',0,'p_empty','Doodlr.py',806),
]
